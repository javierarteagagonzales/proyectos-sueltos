[
 {
  "id": "5a6ce86e2af929789500e7e4",
  "author": "Edsger W. Dijkstra",
  "es": "La informática ya no se trata de computadoras que la astronomía se trata de telescopios."
 },
 {
  "id": "5a6ce86e2af929789500e7d7",
  "author": "Edsger W. Dijkstra",
  "es": "La simplicidad es un requisito previo para la confiabilidad."
 },
 {
  "id": "5a6ce86d2af929789500e7ca",
  "author": "Edsger W. Dijkstra",
  "es": "El principal desafío del científico informático no es confundirse con las complejidades de su propia creación."
 },
 {
  "id": "5a6ce86f2af929789500e7f3",
  "author": "Edsger W. Dijkstra",
  "es": "Si la depuración es el proceso de eliminar errores de software, entonces la programación debe ser el proceso de ponerlos."
 },
 {
  "id": "5a6ce86e2af929789500e7d9",
  "author": "Edsger W. Dijkstra",
  "es": "Un programa es como un poema: no puedes escribir un poema sin escribirlo. Sin embargo, las personas hablan sobre la programación como si fuera un proceso de producción y mida la \"productividad del programador\" en términos de \"número de líneas de código producidas\". Al hacerlo, reservan ese número en el lado equivocado del libro mayor: siempre debemos referirnos al \"número de líneas de código gastadas\"."
 },
 {
  "id": "5a6ce86f2af929789500e7f8",
  "author": "Tony Hoare",
  "es": "Hay dos formas de construir un diseño de software: una forma es hacer que sea tan simple que obviamente no hay deficiencias, y la otra forma es hacer que sea tan complicado que no hay deficiencias obvias. El primer método es mucho más difícil."
 },
 {
  "id": "5a6ce86f2af929789500e807",
  "author": "Jeff Hammerbacher",
  "es": "Las mejores mentes de mi generación son pensar en cómo hacer que las personas hagan clic en anuncios."
 },
 {
  "id": "5a6ce86f2af929789500e7f9",
  "author": "Edsger W. Dijkstra",
  "es": "Las herramientas que utilizamos tienen una influencia profunda y tortuosa en nuestros hábitos de pensamiento y, por lo tanto, en nuestras habilidades de pensamiento."
 },
 {
  "id": "5a6ce86f2af929789500e7f5",
  "author": "Edsger W. Dijkstra",
  "es": "¿Cómo convencemos a las personas de que al programar la simplicidad y la claridad, en resumen: lo que los matemáticos llaman \"elegancia\", no son un lujo prescindible, sino un asunto crucial que decide entre el éxito y el fracaso?"
 },
 {
  "id": "5a6ce86f2af929789500e80b",
  "author": "Fred Brooks",
  "es": "Agregar mano de obra a un proyecto de software tardío lo hace más tarde."
 },
 {
  "id": "5a6ce86f2af929789500e809",
  "author": "Michael Stal",
  "es": "A veces hay una bala de plata para aumentar la productividad de ingeniería de software. Pero necesitas disparar a la persona adecuada."
 },
 {
  "id": "5a6ce86f2af929789500e815",
  "author": "Fred Brooks",
  "es": "Nueve mujeres no pueden hacer un bebé en un mes."
 },
 {
  "id": "5a6ce86f2af929789500e81a",
  "author": "Jeff Sickel",
  "es": "El código eliminado es el código de depuración."
 },
 {
  "id": "5a6ce86f2af929789500e826",
  "author": "Ken Thompson",
  "es": "En caso de duda, use la fuerza bruta."
 },
 {
  "id": "5a6ce86f2af929789500e814",
  "author": "Fred Brooks",
  "es": "Cuando una tarea no puede dividirse debido a restricciones secuenciales, la aplicación de más esfuerzo no tiene ningún efecto en el cronograma. La carga de un niño lleva nueve meses, sin importar cuántas mujeres se asignen."
 },
 {
  "id": "5a6ce86f2af929789500e816",
  "author": "Fred Brooks",
  "es": "Si cada parte de la tarea debe coordinarse por separado entre sí, el esfuerzo aumenta como N (N-1)\/2. Tres trabajadores requieren tres veces más intercomunicación por pares que dos; Cuatro requieren seis veces más que dos."
 },
 {
  "id": "5a6ce86f2af929789500e818",
  "author": "Fred Brooks",
  "es": "Tener un arquitecto del sistema es el paso único más importante hacia la integridad conceptual. Después de enseñar un laboratorio de ingeniería de software más de 20 veces, vine a insistir en que los equipos estudiantiles tan pequeños como cuatro personas eligen un gerente y un arquitecto separado."
 },
 {
  "id": "5a6ce86f2af929789500e80f",
  "author": "Fred Brooks",
  "es": "El programador, como el poeta, funciona solo ligeramente retirado de puro pensamiento de pensamiento. Él construye sus castillos en el aire, desde el aire, creando por el esfuerzo de la imaginación. Pocos medios de creación son tan flexibles, tan fáciles de pulir y reelaborar, tan fácilmente capaces de realizar grandes estructuras conceptuales."
 },
 {
  "id": "5a6ce86f2af929789500e821",
  "author": "Fred Brooks",
  "es": "La primera suposición falsa que subyace en la programación de la programación de sistemas es que todo irá bien, es decir, que cada tarea aumentará solo mientras \"debería\" tomar. Sin embargo, un gran esfuerzo de programación consiste en muchas tareas, algunas encadenadas de extremo a extremo. La probabilidad de que cada uno vaya bien se vuelve desaparecido."
 },
 {
  "id": "5a6ce86f2af929789500e81e",
  "author": "Donald Knuth",
  "es": "Deberíamos olvidarnos de pequeñas eficiencias, digamos aproximadamente el 97% del tiempo: la optimización prematura es la raíz de todo mal. Sin embargo, no debemos dejar pasar nuestras oportunidades en ese 3%crítico."
 },
 {
  "id": "5a6ce86f2af929789500e824",
  "author": "Ken Thompson",
  "es": "Uno de mis días más productivos fue tirar 1,000 líneas de código."
 },
 {
  "id": "5a6ce86f2af929789500e825",
  "author": "Grace Hopper",
  "es": "Una medición precisa vale más de mil opiniones de expertos."
 },
 {
  "id": "5a6ce86f2af929789500e80d",
  "author": "Fred Brooks",
  "es": "Lo que un programador puede hacer en un mes, dos programadores pueden hacer en dos meses."
 },
 {
  "id": "5a6ce86f2af929789500e82e",
  "author": "Rick Osborne",
  "es": "Siempre codifique como si el tipo que termina manteniendo su código será un psicópata violento que sabe dónde vive."
 },
 {
  "id": "5a6ce86f2af929789500e830",
  "author": "John Ousterhout",
  "es": "Un programa que produce resultados incorrectos dos veces más rápido es infinitamente más lento."
 },
 {
  "id": "5a6ce86f2af929789500e828",
  "author": "Poul Anderson",
  "es": "Todavía tengo que ver ningún problema, por complicado que, que cuando se mira de la manera correcta, no se volviera más complicado."
 },
 {
  "id": "5a6ce86f2af929789500e82a",
  "author": "Robert C. Martin",
  "es": "El código de limpieza no lleva tiempo. No el código de limpieza lleva tiempo."
 },
 {
  "id": "5a6ce86f2af929789500e837",
  "author": "David Gelernter",
  "es": "La belleza es más importante en la informática que en cualquier otro lugar de la tecnología porque el software es muy complicado. La belleza es la defensa final contra la complejidad."
 },
 {
  "id": "5a6ce86f2af929789500e833",
  "author": "Edward V. Berard",
  "es": "Caminar sobre el agua y desarrollar software a partir de una especificación es fácil si ambos están congelados."
 },
 {
  "id": "5a6ce86f2af929789500e836",
  "author": "Brian Kernighan",
  "es": "La depuración es el doble que escribir el código en primer lugar. Por lo tanto, si escribe el código de la manera más inteligente posible, por definición, no es lo suficientemente inteligente como para depurarlo."
 },
 {
  "id": "5a6ce86f2af929789500e838",
  "author": "Brian Kernighan",
  "es": "Controlar la complejidad es la esencia de la programación de computadoras."
 },
 {
  "id": "5a6ce86f2af929789500e83f",
  "author": "Chris Wenham",
  "es": "El tiempo de depuración aumenta como un cuadrado del tamaño del programa."
 },
 {
  "id": "5a6ce86f2af929789500e82c",
  "author": "Seymour Cray",
  "es": "El problema con los programadores es que nunca se puede decir lo que está haciendo un programador hasta que sea demasiado tarde."
 },
 {
  "id": "5a6ce86f2af929789500e843",
  "author": "Ron Jeffries",
  "es": "El código nunca se encuentra, los comentarios a veces lo hacen."
 },
 {
  "id": "5a6ce86f2af929789500e845",
  "author": "Laurence J. Peter",
  "es": "Algunos problemas son tan complejos que debes ser altamente inteligentes y bien informados para estar indecisos sobre ellos."
 },
 {
  "id": "5a6ce86f2af929789500e841",
  "author": "Poul-Henning Kamp",
  "es": "Adivina, duplique el número y luego pase a la siguiente unidad de tiempo más grande. Esta regla escala las tareas de una manera muy interesante: una tarea de un minuto explota por un factor de 120 para tomar dos horas. Un trabajo de una hora explota por \"solo\" un factor 48 para tomar dos días, mientras que un trabajo de un día crece en un factor de 14 para tomar dos semanas."
 },
 {
  "id": "5a6ce86f2af929789500e847",
  "author": "Albert Einstein",
  "es": "No tengo talento especial. Solo soy apasionadamente curioso."
 },
 {
  "id": "5a6ce86f2af929789500e849",
  "author": "Robert C. Martin",
  "es": "El uso adecuado de los comentarios es compensar nuestro fracaso para expresarnos en código."
 },
 {
  "id": "5a6ce86f2af929789500e852",
  "author": "Rob Pike",
  "es": "Cuando no hay jerarquía de tipo, no tiene que administrar la jerarquía de tipos."
 },
 {
  "id": "5a6ce86f2af929789500e856",
  "author": "Steve Jobs",
  "es": "Todos deberían aprender a programar una computadora, porque te enseña cómo pensar."
 },
 {
  "id": "5a6ce86f2af929789500e84f",
  "author": "Chris Sacca",
  "es": "La simplicidad es difícil de construir, fácil de usar y difícil de cargar. La complejidad es fácil de construir, difícil de usar y fácil de cobrar."
 },
 {
  "id": "5a6ce8702af929789500e85a",
  "author": "Bill Gates",
  "es": "Medir el progreso de la programación por líneas de código es como medir el progreso del edificio de aeronaves en peso."
 },
 {
  "id": "5a6ce8702af929789500e85e",
  "author": "William Wulf",
  "es": "Se cometen más pecados informáticos en nombre de la eficiencia (sin necesariamente lograrlo) que por cualquier otra razón única, incluida la estupidez ciega."
 },
 {
  "id": "5a6ce8702af929789500e860",
  "author": "Edsger W. Dijkstra",
  "es": "Las pruebas pueden ser una forma muy efectiva de mostrar la presencia de errores, pero es irremediablemente inadecuada para mostrar su ausencia."
 },
 {
  "id": "5a6ce8702af929789500e864",
  "author": "Albert Einstein",
  "es": "La imaginación es más importante que el conocimiento."
 },
 {
  "id": "5a6ce8702af929789500e862",
  "author": "Buckminster Fuller",
  "es": "Cuando estoy trabajando en un problema, nunca pienso en la belleza. Pienso solo cómo resolver el problema. Pero cuando he terminado, si la solución no es hermosa, sé que está mal."
 },
 {
  "id": "5a6ce86f2af929789500e84b",
  "author": "Sean Parent",
  "es": "El buen código es corto, simple y simétrico: el desafío es descubrir cómo llegar allí."
 },
 {
  "id": "5a6ce8702af929789500e868",
  "author": "Linus Torvalds",
  "es": "Si cree que sus usuarios son idiotas, solo los idiotas lo usarán."
 },
 {
  "id": "5a6ce8702af929789500e872",
  "author": "Albert Einstein",
  "es": "Cuando dejas de aprender comienzas a morir."
 },
 {
  "id": "5a6ce8702af929789500e884",
  "author": "Kevlin Henney",
  "es": "Ningún código es más rápido que ningún código."
 },
 {
  "id": "5a6ce8702af929789500e86c",
  "author": "Richard P. Gabriel",
  "es": "Más de la mitad del tiempo que pasa trabajando en un proyecto se dedica a pensar, y ninguna herramienta, sin importar cuán avanzado, pueda pensar para usted."
 },
 {
  "id": "5a6ce8702af929789500e86e",
  "author": "Edsger W. Dijkstra",
  "es": "Podríamos, por ejemplo, comenzar con la limpieza de nuestro idioma al no llamar a un error a un error, sino llamándolo un error. Es mucho más honesto porque exige la culpa donde pertenece, a saber. con el programador que cometió el error. La metáfora animista del error que se coló maliciosamente mientras el programador no estaba mirando es intelectualmente deshonesto, ya que disfraza que el error es la creación del programador. Lo bueno de este simple cambio de vocabulario es que tiene un efecto tan profundo: mientras que, antes, un programa con solo un error solía ser \"casi correcto\", luego un programa con un error es simplemente \"incorrecto\"."
 },
 {
  "id": "5a6ce8702af929789500e88b",
  "author": "Stewart Brand",
  "es": "Una vez que una nueva tecnología comienza a rodar, si no formas parte del vapor, eres parte del camino."
 },
 {
  "id": "5a6ce8702af929789500e887",
  "author": "John Gall (author)",
  "es": "Invariablemente se encuentra que un sistema complejo que funciona ha evolucionado a partir de un sistema simple que funcionó. La proposición inversa también parece ser cierta: un sistema complejo diseñado desde cero nunca funciona y no se puede hacer funcionar."
 },
 {
  "id": "5a6ce8702af929789500e889",
  "author": "Henry Petroski",
  "es": "El logro más sorprendente de la industria del software de computadora es su cancelación continua de las ganancias constantes y asombrosas hechas por la industria de hardware informático."
 },
 {
  "id": "5a6ce8702af929789500e88e",
  "author": "Carl Friedrich Gauss",
  "es": "Nunca estoy satisfecho hasta que he dicho lo más posible en pocas palabras, y escribir brevemente lleva mucho más tiempo que escribir extensamente."
 },
 {
  "id": "5a6ce8702af929789500e890",
  "author": "Bjarne Stroustrup",
  "es": "Solo hay dos tipos de idiomas: los que la gente se queja y los que nadie usa."
 },
 {
  "id": "5a6ce8702af929789500e892",
  "author": "Pamela Zave",
  "es": "El propósito de la ingeniería de software es controlar la complejidad, no crearla."
 },
 {
  "id": "5a6ce8702af929789500e89a",
  "author": "Dennis Ritchie",
  "es": "Unix es simple. Solo se necesita un genio para comprender su simplicidad."
 },
 {
  "id": "5a6ce8702af929789500e89c",
  "author": "Dennis Ritchie",
  "es": "Un lenguaje que no tiene todo es realmente más fácil de programar que algunos que lo hacen."
 },
 {
  "id": "5a6ce8702af929789500e8a2",
  "author": "Richard Feynman",
  "es": "Lo que no puedo construir, no entiendo."
 },
 {
  "id": "5a6ce8702af929789500e8a6",
  "author": "Albert Einstein",
  "es": "Cualquier tonto inteligente puede hacer que las cosas sean más grandes, más complejas y más violentas. Se necesita un toque de genio, y mucho coraje, para moverse en la dirección opuesta."
 },
 {
  "id": "5a6ce8702af929789500e898",
  "author": "Lawrence Flon",
  "es": "No hay lenguaje de programación, sin importar cuán estructurado, que impida que los programadores hagan malos programas."
 },
 {
  "id": "5a6ce8702af929789500e8a8",
  "author": "Martin Fowler",
  "es": "Cualquier tonto puede escribir código que una computadora pueda entender. Los buenos programadores escriben código que los humanos pueden entender."
 },
 {
  "id": "5a6ce8702af929789500e894",
  "author": "Joe Armstrong (programmer)",
  "es": "El problema con los idiomas orientados a objetos es que tienen todo este entorno implícito que llevan consigo. Querías un plátano, pero lo que obtuviste era un gorila que sostenía el plátano y toda la jungla."
 },
 {
  "id": "5a6ce8702af929789500e86a",
  "author": "Ken Thompson",
  "es": "No puedes confiar en el código que no te creaste totalmente."
 },
 {
  "id": "5a6ce8702af929789500e8a4",
  "author": "Albert Einstein",
  "es": "Una persona inteligente resuelve un problema. Una persona sabia lo evita."
 },
 {
  "id": "5a6ce8702af929789500e8ac",
  "author": "Bjarne Stroustrup",
  "es": "El aspecto único más importante del desarrollo de software es ser claro sobre lo que está tratando de construir."
 },
 {
  "id": "5a6ce8702af929789500e8aa",
  "author": "Jonathan Shewchuk",
  "es": "El único pecado es tomar una decisión sin saber que está haciendo uno."
 },
 {
  "id": "5a6ce8702af929789500e8b0",
  "author": "Ryan Singer",
  "es": "Tanta complejidad en el software proviene de tratar de hacer que una cosa haga dos cosas."
 },
 {
  "id": "5a6ce8702af929789500e8b2",
  "author": "P. J. Plauger",
  "es": "Ley de Hofstadter: siempre lleva más tiempo de lo que esperas, incluso cuando tienes en cuenta la ley de Hofstadter."
 },
 {
  "id": "5a6ce8702af929789500e8b6",
  "author": "John Johnson",
  "es": "Primero, resuelva el problema. Luego, escriba el código."
 },
 {
  "id": "5a6ce8702af929789500e8b4",
  "author": "Doug Linder",
  "es": "Un buen programador es alguien que mira en ambos sentidos antes de cruzar una calle de sentido único."
 },
 {
  "id": "5a6ce8702af929789500e8b8",
  "author": "David Wheeler (computer scientist)",
  "es": "La compatibilidad significa repetir deliberadamente los errores de otras personas."
 },
 {
  "id": "5a6ce8702af929789500e8ba",
  "author": "Jeremy S. Anderson",
  "es": "Hay dos productos principales que salen de Berkeley: LSD y UNIX. No creemos que esto sea una coincidencia."
 },
 {
  "id": "5a6ce8702af929789500e8bc",
  "author": "Edsger W. Dijkstra",
  "es": "El programador competente es plenamente consciente del tamaño estrictamente limitado de su propio cráneo; Por lo tanto, se acerca a la tarea de programación en plena humildad, y entre otras cosas evita trucos inteligentes como la peste"
 },
 {
  "id": "5a6ce8702af929789500e8ae",
  "author": "Joshua Bloch",
  "es": "En caso de duda, déjalo fuera."
 },
 {
  "id": "5a6ce8702af929789500e8be",
  "author": "Linus Torvalds",
  "es": "De hecho, afirmaré que la diferencia entre un mal programador y uno bueno es si considera su código o sus estructuras de datos más importantes. Los malos programadores se preocupan por el código. Los buenos programadores se preocupan por las estructuras de datos y sus relaciones."
 },
 {
  "id": "5a6ce8702af929789500e8ce",
  "author": "Albert Einstein",
  "es": "Nunca memorice algo que pueda buscar."
 },
 {
  "id": "5a6ce8702af929789500e8cc",
  "author": "Richard Hamming",
  "es": "Los matemáticos se paran sobre los hombros y los informáticos de los demás se paran en los pies de los demás."
 },
 {
  "id": "5a72399510263e0c45cb6cfa",
  "author": "Edsger W. Dijkstra",
  "es": "Lisp ha ayudado a varios de nuestros compañeros humanos más talentosos a pensar que antes pensaban los pensamientos imposibles."
 },
 {
  "id": "5a6ce8702af929789500e8c6",
  "author": "Bjarne Stroustrup",
  "es": "Una organización que trata a sus programadores como imbéciles pronto tendrá programadores que estén dispuestos y capaces de actuar solo como imbéciles."
 },
 {
  "id": "5a82224c89919d0004b357ce",
  "author": "Anonymous",
  "es": "El botón está funcionando, solo que no se puede ver."
 },
 {
  "id": "5a8225ee89919d0004b357d0",
  "author": "Douglas Crockford",
  "es": "No te preocupes por nada. Simplemente haga lo que pueda y sea lo mejor que pueda ser."
 },
 {
  "id": "5a82b607fc716e0004373f53",
  "author": "Tom DeMarco",
  "es": "El negocio de la construcción de software no es realmente de alta tecnología en absoluto. Sobre todo, es un negocio de hablar entre ellos y escribir cosas."
 },
 {
  "id": "5a6ce8702af929789500e8ca",
  "author": "Paul Graham (programmer)",
  "es": "En la programación de la parte difícil no es resolver problemas, sino decidir qué problemas resolver."
 },
 {
  "id": "5a82cd0efc716e0004373f56",
  "author": "Tom DeMarco",
  "es": "La función del gerente no es hacer que las personas funcionen, sino hacer posible que las personas funcionen."
 },
 {
  "id": "5a82c90cfc716e0004373f55",
  "author": "Tom DeMarco",
  "es": "Las personas bajo presión no funcionan mejor; Simplemente trabajan más rápido."
 },
 {
  "id": "5a8946eda578110004299a3b",
  "author": "Donald Knuth",
  "es": "Mi principal conclusión después de pasar diez años de mi vida trabajando en el proyecto Tex es que el software es difícil. Es más difícil que cualquier otra cosa que haya tenido que hacer."
 },
 {
  "id": "5a82cd5ffc716e0004373f57",
  "author": "Donald Knuth",
  "es": "La ciencia es lo que entendemos lo suficientemente bien como para explicarle a una computadora. Arte es todo lo que hacemos."
 },
 {
  "id": "5a896544a12a0e0004c76124",
  "author": "Donald Knuth",
  "es": "Hemos visto que la programación de computadoras es un arte, porque aplica conocimiento acumulado al mundo, porque requiere habilidad e ingenio, y especialmente porque produce objetos de belleza."
 },
 {
  "id": "5a82cd91fc716e0004373f58",
  "author": "Donald Knuth",
  "es": "El correo electrónico es algo maravilloso para las personas cuyo papel en la vida es estar al tanto de las cosas. Pero no para mí; Mi papel es estar en el fondo de las cosas. Lo que hago lleva largas horas de estudio y una concentración ininterrumpida."
 },
 {
  "id": "5a8e9b5884a8f2000482568b",
  "author": "Kevlin Henney",
  "es": "Menos código equivalen a menos errores."
 },
 {
  "id": "5a91370b2141d30004b42e58",
  "author": "Charles Babbage",
  "es": "Tan pronto como exista un motor analítico, necesariamente guiará el curso futuro de la ciencia."
 },
 {
  "id": "5a9137d72141d30004b42e59",
  "author": "Charles Babbage",
  "es": "Los errores que surgen de la ausencia de hechos son mucho más numerosos y más duraderos que los que resultan del razonamiento poco sólido que respeta los datos verdaderos."
 },
 {
  "id": "5a9138442141d30004b42e5a",
  "author": "Charles Babbage",
  "es": "Ya hemos mencionado lo que, tal vez, puede parecer paradójico para algunos de nuestros lectores, que la división del trabajo puede aplicarse con el mismo éxito a las operaciones mecánicas, y que garantiza tanto en la misma economía del tiempo."
 },
 {
  "id": "5a9139472141d30004b42e5b",
  "author": "Charles Babbage",
  "es": "En dos ocasiones me han preguntado [por miembros del Parlamento]: \"Ore, Sr. Babbage, si pones en la máquina cifras equivocadas, ¿saldrán las respuestas correctas?\" No puedo aprehender el tipo de confusión de ideas que podrían provocar tal pregunta."
 },
 {
  "id": "5a91be60346ab3000418a760",
  "author": "Edsger W. Dijkstra",
  "es": "Mientras no hubiera máquinas, la programación no era ningún problema; Cuando teníamos algunas computadoras débiles, la programación se convirtió en un problema leve, y ahora tenemos computadoras gigantescas, la programación se ha convertido en un problema igualmente gigantesco."
 },
 {
  "id": "5a91e12fc4240c0004265950",
  "author": "Edsger W. Dijkstra",
  "es": "El uso de COBOL paraliza la mente; Su enseñanza debe, por lo tanto, ser considerada como un delito penal."
 },
 {
  "id": "5a91d1c1c4240c000426594f",
  "author": "Edsger W. Dijkstra",
  "es": "Si desea programadores más efectivos, descubrirá que no deberían perder el tiempo de depuración, no deberían introducir los errores para comenzar."
 },
 {
  "id": "5a91e150c4240c0004265951",
  "author": "Edsger W. Dijkstra",
  "es": "Es prácticamente imposible enseñar una buena programación a los estudiantes que han tenido una exposición previa a los básicos: como programadores potenciales, se mutilan mentalmente más allá de la esperanza de regeneración."
 },
 {
  "id": "5a91e27ec4240c0004265953",
  "author": "Edsger W. Dijkstra",
  "es": "Una imagen puede valer mil palabras, una fórmula vale más que mil imágenes."
 },
 {
  "id": "5a91e224c4240c0004265952",
  "author": "Edsger W. Dijkstra",
  "es": "Quiero decir, si dentro de 10 años, cuando estás haciendo algo rápido y sucio, de repente visualizas que estoy mirando por encima de tus hombros y te digo a ti mismo \"a Dijkstra no le hubiera gustado esto\", bueno, eso sería suficiente inmortalidad para mí ."
 },
 {
  "id": "5a91bc8f346ab3000418a75f",
  "author": "Edsger W. Dijkstra",
  "es": "No me culpes por el hecho de que la programación competente será demasiado difícil para \"el programador promedio\": no debes caer en la trampa de rechazar una técnica quirúrgica porque está más allá de las capacidades del barbero en su tienda a la vuelta de la esquina."
 },
 {
  "id": "5a91e37bc4240c0004265955",
  "author": "John von Neumann",
  "es": "Joven, en matemáticas no entiendes las cosas. Sólo te acostumbras a ellos."
 },
 {
  "id": "5a91e40ec4240c0004265957",
  "author": "Dennis Ritchie",
  "es": "C es peculiar, defectuoso y un enorme éxito."
 },
 {
  "id": "5a91e2d0c4240c0004265954",
  "author": "Edsger W. Dijkstra",
  "es": "No es tarea de la universidad ofrecer lo que la sociedad solicita, sino dar lo que la sociedad necesita."
 },
 {
  "id": "5a895d1ba5f8bf3df4485d1d",
  "author": "Donald Knuth",
  "es": "Al comprender un lenguaje orientado a la máquina, el programador tenderá a utilizar un método mucho más eficiente; Está mucho más cerca de la realidad."
 },
 {
  "id": "5a91e459c4240c0004265958",
  "author": "Dennis Ritchie",
  "es": "Otro peligro es que las presiones comerciales de un tipo u otro desviarán la atención de los mejores pensadores, desde la innovación real hasta la explotación de la moda actual, desde la prospección hasta la minería de un Lode conocido."
 },
 {
  "id": "5a91e51dc4240c0004265959",
  "author": "Bjarne Stroustrup",
  "es": "Dentro de C ++, hay un lenguaje mucho más pequeño y limpio que lucha por salir."
 },
 {
  "id": "5a91e560c4240c000426595a",
  "author": "Bjarne Stroustrup",
  "es": "Cualquiera que vaya a usted y dice que tiene un idioma perfecto es ingenuo o un vendedor."
 },
 {
  "id": "5a91e60dc4240c000426595b",
  "author": "Alan Turing",
  "es": "Un hombre provisto de papel, lápiz y caucho, y sujeto a una disciplina estricta, es en efecto una máquina universal."
 },
 {
  "id": "5a91e6a3c4240c000426595c",
  "author": "Alan Turing",
  "es": "La idea detrás de las computadoras digitales puede explicarse diciendo que estas máquinas están destinadas a llevar a cabo cualquier operación que pueda hacer una computadora humana."
 },
 {
  "id": "5a91e779c4240c000426595d",
  "author": "Alan Turing",
  "es": "Las máquinas me toman por sorpresa con gran frecuencia."
 },
 {
  "id": "5a933b4c8e7b510004cba4be",
  "author": "Bjarne Stroustrup",
  "es": "Tal vez \"solo una pequeña variable global\" no es demasiado inmanejable, pero ese estilo conduce al código que es inútil, excepto a su programador original."
 },
 {
  "id": "5a933c3d8e7b510004cba4bf",
  "author": "Linus Torvalds",
  "es": "Estoy haciendo un sistema operativo gratuito (solo un pasatiempo, no será grande y profesional como GNU)."
 },
 {
  "id": "5a933cac8e7b510004cba4c0",
  "author": "Linus Torvalds",
  "es": "Si necesita más de 3 niveles de sangría, de todos modos está jodido y debe arreglar su programa."
 },
 {
  "id": "5a933f078e7b510004cba4c1",
  "author": "Linus Torvalds",
  "es": "Un número infinito de monos que escriben en emacs de GNU nunca sería un buen programa."
 },
 {
  "id": "5a9340258e7b510004cba4c3",
  "author": "Linus Torvalds",
  "es": "Si Microsoft alguna vez hace aplicaciones para Linux significa que he ganado."
 },
 {
  "id": "5a933f6f8e7b510004cba4c2",
  "author": "Linus Torvalds",
  "es": "Mira, no solo tienes que ser un buen codificador para crear un sistema como Linux, sino que también tienes que ser un bastardo astuto ;-)"
 },
 {
  "id": "5a9342048e7b510004cba4c6",
  "author": "Linus Torvalds",
  "es": "Realmente, no estoy dispuesto a destruir Microsoft. Ese será un efecto secundario completamente involuntario."
 },
 {
  "id": "5a9341788e7b510004cba4c5",
  "author": "Linus Torvalds",
  "es": "Hablar es barato. Muéstrame el código."
 },
 {
  "id": "5a9340e08e7b510004cba4c4",
  "author": "Tom Cargill",
  "es": "El primer 90 por ciento del código representa el primer 90 por ciento del tiempo de desarrollo. El 10 por ciento restante del código representa el otro 90 por ciento del tiempo de desarrollo."
 },
 {
  "id": "5a93467e8e7b510004cba4c8",
  "author": "Kent Beck",
  "es": "No soy un gran programador; Solo soy un buen programador con grandes hábitos."
 },
 {
  "id": "5a9348828e7b510004cba4c9",
  "author": "Bill Gates",
  "es": "Solo hay un truco en el software, y eso es utilizar una pieza de software que ya se ha escrito."
 },
 {
  "id": "5a93d5a36a584e0004a4a612",
  "author": "Steve Jobs",
  "es": "No puede preguntar a los clientes qué quieren y luego tratar de darles eso. Para cuando lo cree, querrán algo nuevo."
 },
 {
  "id": "5a93d6b26a584e0004a4a614",
  "author": "Steve Jobs",
  "es": "Lo que es una computadora para mí es que es la herramienta más notable que se nos ocurrió. Es el equivalente de una bicicleta para nuestras mentes."
 },
 {
  "id": "5a93eb796a584e0004a4a617",
  "author": "Marijn Haverbeke",
  "es": "Resulta que la programación es difícil. Las reglas fundamentales suelen ser simples y claras. Pero los programas construidos sobre estas reglas tienden a ser lo suficientemente complejos como para introducir sus propias reglas y complejidad. Estás construyendo tu propio laberinto, en cierto modo, y es posible que te pierdas en él."
 },
 {
  "id": "5a93d8036a584e0004a4a615",
  "author": "Steve Jobs",
  "es": "Estoy convencido de que aproximadamente la mitad de lo que separa a los empresarios exitosos de los no exitosos es pura perseverancia. Es muy dificil."
 },
 {
  "id": "5a93da0d6a584e0004a4a616",
  "author": "Steve Jobs",
  "es": "Muchas empresas contratan personas para decirles qué hacer. Contratamos a la gente para que nos diga qué hacer."
 },
 {
  "id": "5a93ebdc6a584e0004a4a618",
  "author": "Marijn Haverbeke",
  "es": "Las computadoras mismas solo pueden hacer cosas estúpidamente directas. La razón por la que son tan útiles es que hacen estas cosas a una velocidad increíblemente alta."
 },
 {
  "id": "5a93ed3d6a584e0004a4a619",
  "author": "Marijn Haverbeke",
  "es": "Un programa es un edificio de pensamiento. Es sin costo de construir, no tiene peso y crece fácilmente bajo nuestras manos de escritura. Pero sin cuidado, el tamaño y la complejidad de un programa crecerán fuera de control, confundiendo incluso a la persona que lo creó."
 },
 {
  "id": "5a93edc56a584e0004a4a61a",
  "author": "Marijn Haverbeke",
  "es": "Hay muchos errores terribles que cometer en el diseño del programa, así que continúe y hágalos para que los comprenda mejor."
 },
 {
  "id": "5a93fd14e49ad10004edb860",
  "author": "Donald Knuth",
  "es": "La gente piensa que la informática es el arte de los genios, pero la realidad real es todo lo contrario, solo muchas personas que hacen cosas que se construyen entre sí, como un muro de mini piedras."
 },
 {
  "id": "5a94040fe49ad10004edb862",
  "author": "Jamie Zawinski",
  "es": "El profesionalismo no tiene lugar en el arte, y la piratería es el arte. La ingeniería de software puede ser ciencia; Pero eso no es lo que hago. Soy un hacker, no un ingeniero."
 },
 {
  "id": "5a940c14e49ad10004edb864",
  "author": "Quarry worker's creed",
  "es": "Nosotros, que cortamos simples piedras, siempre debemos estar imaginando catedrales."
 },
 {
  "id": "5a9405d7e49ad10004edb863",
  "author": "Roy Fielding",
  "es": "La comunicación debe ser de naturaleza sin estado, de modo que cada solicitud de cliente a servidor debe contener toda la información necesaria para comprender la solicitud, y no puede aprovechar ningún contexto almacenado en el servidor."
 },
 {
  "id": "5a942ea0ee7ed5000496b16f",
  "author": "Kent Beck",
  "es": "Cuando sienta la necesidad de escribir un comentario, primero intente refactorizar el código para que cualquier comentario se vuelva superfluo."
 },
 {
  "id": "5a942dc4ee7ed5000496b16e",
  "author": "Kent Beck",
  "es": "Cuando encuentra que tiene que agregar una función a un programa, y ​​el código del programa no está estructurado de una manera conveniente de agregar la función, primero refactorice el programa para que sea fácil agregar la función, luego agregue la función."
 },
 {
  "id": "5a942fc3ee7ed5000496b171",
  "author": "Martin Fowler",
  "es": "Hay pocas cosas más frustrantes o en el tiempo de desperdicio que la depuración. ¿No sería mucho más rápido si simplemente no creamos los errores en primer lugar?"
 },
 {
  "id": "5a942fa3ee7ed5000496b170",
  "author": "Martin Fowler",
  "es": "Con las pruebas, sé de inmediato cuando agregué un error. Eso me permite solucionar el error inmediatamente, antes de que pueda arrastrarse y esconderse."
 },
 {
  "id": "5a942fd8ee7ed5000496b172",
  "author": "Martin Fowler",
  "es": "Creo que una de las reglas más valiosas es evitar la duplicación."
 },
 {
  "id": "5a942ffbee7ed5000496b173",
  "author": "Martin Fowler",
  "es": "A menudo, los diseñadores hacen cosas complicadas que mejoran la capacidad en una plataforma de hardware en particular cuando en realidad podría ser más barato comprar más hardware."
 },
 {
  "id": "5a9430a4ee7ed5000496b175",
  "author": "John Carmack",
  "es": "La situación es mucho mejor para los programadores de hoy: una PC usada barata, un CD de Linux y una cuenta de Internet, y tiene todas las herramientas necesarias para trabajar en cualquier nivel de habilidad de programación que desee disparar."
 },
 {
  "id": "5a94303bee7ed5000496b174",
  "author": "John Carmack",
  "es": "Si desea partir y desarrollar una gran cosa nueva, no necesita millones de dólares de capitalización. Necesita suficiente pizza y Coca -Coca -Coca -Cola para mantener su refrigerador, una PC barata para trabajar y la dedicación para superarlo."
 },
 {
  "id": "5a9430ceee7ed5000496b176",
  "author": "John Carmack",
  "es": "La historia en un juego es como una historia en una película porno. Se espera que esté allí, pero no es tan importante."
 },
 {
  "id": "5a9430fbee7ed5000496b177",
  "author": "Paul Graham (programmer)",
  "es": "Lo mejor que el software puede ser es fácil, pero la forma de hacerlo es obtener los valores predeterminados correctos, no limitar las elecciones de los usuarios."
 },
 {
  "id": "5a943207ee7ed5000496b178",
  "author": "Paul Graham (programmer)",
  "es": "Lo más importante es poder pensar lo que quiere, no decir lo que quiere."
 },
 {
  "id": "5a943233ee7ed5000496b17a",
  "author": "Paul Graham (programmer)",
  "es": "No es tan importante en lo que trabajas, siempre que no estés perdiendo el tiempo."
 },
 {
  "id": "5a943216ee7ed5000496b179",
  "author": "Paul Graham (programmer)",
  "es": "El 5% superior de los programadores probablemente escribe el 99% del buen software."
 },
 {
  "id": "5a943244ee7ed5000496b17b",
  "author": "Paul Graham (programmer)",
  "es": "Hay pocas fuentes de energía tan poderosas como un estudiante de graduación posterior."
 },
 {
  "id": "5a943267ee7ed5000496b17d",
  "author": "Bill Gates",
  "es": "Sus clientes más infelices son su mayor fuente de aprendizaje."
 },
 {
  "id": "5a9432a9ee7ed5000496b17e",
  "author": "Bill Gates",
  "es": "Ya no estamos en los días en que todo está súper bien elaborado. Pero en el corazón de los programas que llegan a la cima, encontrará que el código interno clave fue realizado por algunas personas que realmente saben lo que estaban haciendo."
 },
 {
  "id": "5a943301ee7ed5000496b181",
  "author": "Ward Cunningham",
  "es": "¿Qué es la simplicidad? La simplicidad es la ruta más corta para una solución."
 },
 {
  "id": "5a943316ee7ed5000496b182",
  "author": "Ward Cunningham",
  "es": "Es importante poner una nueva característica en un programa, pero la refactorización para que se puedan agregar nuevas características en el futuro es igualmente importante."
 },
 {
  "id": "5a94333dee7ed5000496b183",
  "author": "Albert Einstein",
  "es": "Una nueva idea viene de repente y de una manera bastante intuitiva. Pero la intuición no es más que el resultado de la experiencia intelectual anterior."
 },
 {
  "id": "5a9433d2ee7ed5000496b184",
  "author": "Ludwig Wittgenstein",
  "es": "Los límites de mi idioma significan los límites de mi mundo."
 },
 {
  "id": "5a9434dcee7ed5000496b187",
  "author": "Alan Perlis",
  "es": "Si tiene un procedimiento con 10 parámetros, probablemente se haya perdido algunos."
 },
 {
  "id": "5a943438ee7ed5000496b185",
  "author": "George Boole",
  "es": "Ese lenguaje es un instrumento de razón humana, y no solo un medio para la expresión del pensamiento, es una verdad generalmente admitida."
 },
 {
  "id": "5a9434edee7ed5000496b188",
  "author": "Alan Perlis",
  "es": "No vale la pena conocer un lenguaje que no afecta la forma en que piensa sobre la programación."
 },
 {
  "id": "5a943501ee7ed5000496b189",
  "author": "Alan Perlis",
  "es": "La simplicidad no precede a la complejidad, sino que la sigue."
 },
 {
  "id": "5a943514ee7ed5000496b18a",
  "author": "Alan Perlis",
  "es": "Un año que pasó en inteligencia artificial es suficiente para hacerle creer en Dios."
 },
 {
  "id": "5a943538ee7ed5000496b18c",
  "author": "Alan Perlis",
  "es": "El mejor libro sobre programación para el laico es Alicia en el país de las maravillas, pero eso es porque es el mejor libro sobre cualquier cosa para el laico."
 },
 {
  "id": "5a94351fee7ed5000496b18b",
  "author": "Alan Perlis",
  "es": "Tratar con el fracaso es fácil: trabajar duro para mejorar."
 },
 {
  "id": "5a943485ee7ed5000496b186",
  "author": "Alan Perlis",
  "es": "Un lenguaje de programación es de bajo nivel cuando sus programas requieren atención a los irrelevantes."
 },
 {
  "id": "5a9435d7ee7ed5000496b190",
  "author": "James Gleick",
  "es": "Los programas de computadora son los más intrincados, delicadamente equilibrados y finamente entrelazados de todos los productos de la industria humana hasta la fecha."
 },
 {
  "id": "5a9435fbee7ed5000496b191",
  "author": "Edsger W. Dijkstra",
  "es": "La explotación efectiva de sus poderes de abstracción debe considerarse como una de las actividades más vitales de un programador competente."
 },
 {
  "id": "5a943579ee7ed5000496b18e",
  "author": "Alan Perlis",
  "es": "Los tontos ignoran la complejidad. Los pragmáticos lo sufren. Algunos pueden evitarlo. Los genios lo eliminan."
 },
 {
  "id": "5a943675ee7ed5000496b193",
  "author": "Hal Abelson",
  "es": "Se deben escribir programas para que las personas lean, y solo por cierto para que las máquinas se ejecuten."
 },
 {
  "id": "5a943612ee7ed5000496b192",
  "author": "Mark Gibbs",
  "es": "No importa cuán resbaladizo sea la demostración en el ensayo, cuando lo haces frente a una audiencia en vivo, la probabilidad de una presentación perfecta es inversamente proporcional a la cantidad de personas que observan, elevada al poder de la cantidad de dinero involucrado."
 },
 {
  "id": "5a956c50e648470004c69e0d",
  "author": "Nathaniel Borenstein",
  "es": "Cabe señalar que ningún ingeniero de software capacitado éticamente consentiría para escribir un procedimiento Destroy Baghdad. La ética profesional básica requeriría que escriba un procedimiento de DestroyCity, al que Bagdad podría administrarse como un parámetro."
 },
 {
  "id": "5a956e55e648470004c69e10",
  "author": "Jef Raskin",
  "es": "Cuando no entendemos un proceso, caemos en el pensamiento mágico sobre los resultados."
 },
 {
  "id": "5a956de5e648470004c69e0f",
  "author": "John Carmack",
  "es": "La programación de bajo nivel es buena para el alma del programador."
 },
 {
  "id": "5a956edfe648470004c69e11",
  "author": "Edsger W. Dijkstra",
  "es": "La simplicidad y la elegancia son impopulares porque requieren trabajo duro y disciplina para lograr y la educación para ser apreciados."
 },
 {
  "id": "5a956f87e648470004c69e12",
  "author": "Ted Nelson",
  "es": "Una interfaz de usuario debe ser tan simple que un principiante en una emergencia puede entenderla en 10 segundos."
 },
 {
  "id": "5a956dcce648470004c69e0e",
  "author": "Ted Nelson",
  "es": "Aprender a programar no tiene más que ver con el diseño de software interactivo que aprender a tocar el tipo tiene que ver con escribir poesía."
 },
 {
  "id": "5a95a672cb1a4d0004b2987f",
  "author": "Alan Perlis",
  "es": "Cada programa tiene (al menos) dos propósitos: el que fue escrito y otro para el que no lo fue."
 },
 {
  "id": "5a95a6a3cb1a4d0004b29881",
  "author": "Alan Perlis",
  "es": "En la simbiosis de hombre-máquina, es el hombre quien debe ajustarse: las máquinas no pueden."
 },
 {
  "id": "5a95a686cb1a4d0004b29880",
  "author": "Alan Perlis",
  "es": "La constante de un hombre es la variable de otro hombre."
 },
 {
  "id": "5a9432bcee7ed5000496b17f",
  "author": "Bill Gates",
  "es": "El éxito es un maestro pésimo. Seduce a las personas inteligentes para que piensen que no pueden perder."
 },
 {
  "id": "5a95a760cb1a4d0004b29883",
  "author": "Alan Perlis",
  "es": "Es más fácil cambiar la especificación para adaptarse al programa que viceversa."
 },
 {
  "id": "5a95a6f3cb1a4d0004b29882",
  "author": "Alan Perlis",
  "es": "Creo que es inevitable que las personas se programen mal. La capacitación no ayudará sustancialmente a los asuntos. Tenemos que aprender a vivir con eso."
 },
 {
  "id": "5a95d22e7700780004d51dbb",
  "author": "Henry Ford",
  "es": "Si hubiéramos preguntado a los clientes qué querían, habrían dicho \"caballos más rápidos\"."
 },
 {
  "id": "5a95d2487700780004d51dbc",
  "author": "David Parnas",
  "es": "He descubierto que la razón por la cual mucha gente está interesada en la inteligencia artificial es la misma razón por la que mucha gente está interesada en las extremidades artificiales: les falta una."
 },
 {
  "id": "5a95d2a57700780004d51dbd",
  "author": "Leslie Lamport",
  "es": "Un sistema distribuido es aquel en el que la falla de una computadora que ni siquiera sabía que existía puede hacer que su propia computadora sea inutilizable."
 },
 {
  "id": "5a95d3a37700780004d51dbe",
  "author": "Ward Cunningham",
  "es": "Todo se habla hasta que se ejecuta el código."
 },
 {
  "id": "5a95d4127700780004d51dbf",
  "author": "Jan L. A. van de Snepscheut",
  "es": "En teoría, no hay diferencia entre la teoría y la práctica. Pero, en la práctica, la hay."
 },
 {
  "id": "5a95d4977700780004d51dc2",
  "author": "Ellen Ullman",
  "es": "Construimos nuestros sistemas informáticos de la forma en que construimos nuestras ciudades: con el tiempo, sin un plan, encima de las ruinas."
 },
 {
  "id": "5a95d55e7700780004d51dc3",
  "author": "Eric S. Raymond",
  "es": "La siguiente mejor opción para tener buenas ideas es reconocer buenas ideas de sus usuarios."
 },
 {
  "id": "5a95d43e7700780004d51dc0",
  "author": "Joel Spolsky",
  "es": "Un buen software, como buen vino, lleva tiempo."
 },
 {
  "id": "5a95d5bf7700780004d51dc4",
  "author": "Eric S. Raymond",
  "es": "Vale la pena aprender a Lisp para la profunda experiencia de la Ilustración que tendrá cuando finalmente la obtenga; Esa experiencia lo convertirá en un mejor programador por el resto de sus días, incluso si nunca usa mucho LISP."
 },
 {
  "id": "5a95d4577700780004d51dc1",
  "author": "Filipe Fortes",
  "es": "La depuración es como ser el detective en una película de crimen donde tú también eres el asesino."
 },
 {
  "id": "5a95d8a87700780004d51dc7",
  "author": "Dennis Ritchie",
  "es": "Lo que queríamos preservar no era solo un buen ambiente para hacer programación, sino un sistema en torno a la que podía formarse compañerismo."
 },
 {
  "id": "5a95d7b47700780004d51dc6",
  "author": "Marvin Minsky",
  "es": "Una vez que las computadoras obtuvieron el control, es posible que nunca lo recuperemos."
 },
 {
  "id": "5a95e89f7700780004d51dc9",
  "author": "Jef Raskin",
  "es": "Una computadora no perderá su tiempo o requerirá que haga más trabajo de lo que es estrictamente necesario."
 },
 {
  "id": "5a95fcd17700780004d51dcb",
  "author": "George Boole",
  "es": "De las muchas formas de cultivo falso, una conversación prematura con abstracciones es quizás la más probable que sea fatal para el crecimiento de un vigor masculino del intelecto."
 },
 {
  "id": "5a95dae97700780004d51dc8",
  "author": "Ken Thompson",
  "es": "C ++ ciertamente tiene sus buenos puntos. Pero en general creo que es un mal idioma. Hace muchas cosas bien y es solo un montón de ideas de basura que son mutuamente excluyentes. Es demasiado grande, demasiado complejo. Y obviamente está construido por un comité."
 },
 {
  "id": "5a95fce07700780004d51dcc",
  "author": "George Boole",
  "es": "No importa cuán correcto pueda ser un teorema matemático, uno nunca debería estar satisfecho de que no haya algo imperfecto al respecto hasta que también da la impresión de ser hermosa."
 },
 {
  "id": "5a96009b7700780004d51dcf",
  "author": "Ada Lovelace",
  "es": "El motor analítico no ocupa un terreno común con meras \"máquinas calculadoras\". Tiene una posición totalmente suya, y las consideraciones que sugiere son más interesantes en su naturaleza."
 },
 {
  "id": "5a96001a7700780004d51dce",
  "author": "Ada Lovelace",
  "es": "La ciencia de las operaciones, derivada de las matemáticas más especialmente, es una ciencia de sí misma y tiene su propia verdad abstracta y valor."
 },
 {
  "id": "5a9601017700780004d51dd1",
  "author": "Ada Lovelace",
  "es": "En el caso del motor analítico, sin duda hemos presentado un cierto capital de mano de obra analítica en una línea en particular, pero esto es para que el motor nos traiga un rendimiento mucho mayor en otra línea."
 },
 {
  "id": "5a9600ae7700780004d51dd0",
  "author": "Ada Lovelace",
  "es": "Podemos decir más adecuadamente que el motor analítico teje los patrones algebraicos al igual que el telar de Jacquard teñirá las flores y las hojas."
 },
 {
  "id": "5a9602227700780004d51dd2",
  "author": "George Boole",
  "es": "El diseño del siguiente tratado es investigar las leyes fundamentales de esas operaciones de la mente por las cuales se realiza el razonamiento; para expresarles en el lenguaje simbólico de un cálculo, y sobre esta base para establecer la ciencia de la lógica y construir su método."
 },
 {
  "id": "5a967d572ba98a0004b6294f",
  "author": "John von Neumann",
  "es": "Cualquiera que considera métodos aritméticos para producir dígitos aleatorios está, por supuesto, en un estado de pecado. Porque, como se ha señalado varias veces, no existe un número aleatorio."
 },
 {
  "id": "5a9602757700780004d51dd3",
  "author": "George Boole",
  "es": "No solo existe una analogía estrecha entre las operaciones de la mente en el razonamiento general y sus operaciones en la ciencia particular del álgebra, sino que en gran medida hay un acuerdo exacto en las leyes por las cuales se realizan las dos clases de operaciones."
 },
 {
  "id": "5a967e9c2ba98a0004b62950",
  "author": "John von Neumann",
  "es": "Una gran parte de las matemáticas que se vuelven útiles desarrolladas sin ningún deseo de ser útil, y en una situación en la que nadie podría saber en qué área sería útil."
 },
 {
  "id": "5a96b8e2d6959500047aecae",
  "author": "Friedrich Bauer",
  "es": "La ingeniería de software es la parte de la informática que es demasiado difícil para el científico informático."
 },
 {
  "id": "5a96b909d6959500047aecaf",
  "author": "Grady Booch",
  "es": "El ingeniero de software aficionado siempre está en busca de magia, algún método o herramienta sensacional cuya aplicación promete hacer que el desarrollo de software sea trivial. Es la marca del ingeniero de software profesional saber que no existen tal panacea."
 },
 {
  "id": "5a96b980d6959500047aecb0",
  "author": "Grady Booch",
  "es": "Las buenas personas con un buen proceso superarán a las buenas personas sin ningún proceso cada vez."
 },
 {
  "id": "5a96b998d6959500047aecb1",
  "author": "Grady Booch",
  "es": "Toda la historia de la ingeniería de software es la del aumento de los niveles de abstracción."
 },
 {
  "id": "5a96b9ead6959500047aecb2",
  "author": "Hal Abelson",
  "es": "La razón por la que creemos que la informática es sobre las computadoras es la misma razón por la que los egipcios pensaron que la geometría se trataba de inspirar instrumentos: cuando algún campo recién comienza y realmente no lo entiendes muy bien, es muy fácil confundir el esencia de lo que estás haciendo con las herramientas que usas."
 },
 {
  "id": "5a96b7abd6959500047aecad",
  "author": "Alan Kay",
  "es": "La mayoría del software hoy en día se parece mucho a una pirámide egipcia con millones de ladrillos apilados uno encima del otro, sin integridad estructural, pero recién realizada por la fuerza bruta y miles de esclavos."
 },
 {
  "id": "5a96ba01d6959500047aecb3",
  "author": "Bill Gates",
  "es": "¿Estudiar informática es la mejor manera de prepararse para ser programador? No. La mejor manera de prepararse es escribir programas y estudiar excelentes programas que otras personas han escrito."
 },
 {
  "id": "5a96ba30d6959500047aecb4",
  "author": "Richard Feynman",
  "es": "La informática difiere de la física en que en realidad no es una ciencia. No estudia objetos naturales. Más bien, la informática es como la ingeniería; Se trata de conseguir algo para hacer algo."
 },
 {
  "id": "5a96ba45d6959500047aecb5",
  "author": "Richard Hamming",
  "es": "El propósito de la informática es la idea, no los números."
 },
 {
  "id": "5a96bb2dd6959500047aecb7",
  "author": "Albert Einstein",
  "es": "Todo nuestro progreso tecnológico exaltado, la civilización para el caso, es comparable a un hacha en la mano de un criminal patológico."
 },
 {
  "id": "5a96bbaed6959500047aecb8",
  "author": "Arthur C. Clarke",
  "es": "Cuando un científico distinguido pero mayor afirma que algo es posible, es casi seguro que tiene razón. Cuando afirman que algo es imposible, probablemente estén equivocados."
 },
 {
  "id": "5a96ba93d6959500047aecb6",
  "author": "Dennis Ritchie",
  "es": "La investigación en ciencias de la computación es diferente de estas disciplinas más tradicionales. Filosóficamente difiere de las ciencias físicas porque busca no descubrir, explicar o explotar el mundo natural, sino para estudiar las propiedades de las máquinas de la creación humana."
 },
 {
  "id": "5a96bbc3d6959500047aecb9",
  "author": "Arthur C. Clarke",
  "es": "Cualquier tecnología suficientemente avanzada es indistinguible de la magia."
 },
 {
  "id": "5a96bd31d6959500047aecba",
  "author": "Joseph Yoder (computer scientist)",
  "es": "Si bien se ha centrado mucha atención en los patrones de arquitectura de software de alto nivel, lo que es, en efecto, la arquitectura de software estándar de facto rara vez se discute: la gran bola de lodo."
 },
 {
  "id": "5a96bd7ed6959500047aecbb",
  "author": "Joseph Yoder (computer scientist)",
  "es": "Demasiados de nuestros sistemas de software son, arquitectónicamente, poco más que Shantytowns."
 },
 {
  "id": "5a96be8ed6959500047aecbe",
  "author": "Joseph Yoder (computer scientist)",
  "es": "La gestión de un gran proyecto es un problema cualitativamente diferente para administrar uno pequeño, al igual que liderar una división de infantería a la batalla es diferente de comandar un pequeño equipo de las Fuerzas Especiales."
 },
 {
  "id": "5a96bf70d6959500047aecc2",
  "author": "Joseph Yoder (computer scientist)",
  "es": "Cuando construyes un prototipo, siempre existe el riesgo de que alguien diga \"Eso es lo suficientemente bueno, envíalo\". Una forma de minimizar el riesgo de que se ponga un prototipo en producción es escribir el prototipo al usar un lenguaje o herramienta que no podría usar para una versión de producción."
 },
 {
  "id": "5a96bec9d6959500047aecbf",
  "author": "Joseph Yoder (computer scientist)",
  "es": "Lamentablemente, la arquitectura ha sido subvaluada durante tanto tiempo que muchos ingenieros consideran la vida con una gran bola de barro como normal."
 },
 {
  "id": "5a96bf99d6959500047aecc3",
  "author": "Joseph Yoder (computer scientist)",
  "es": "El verdadero problema con el código desechable viene cuando no se tira."
 },
 {
  "id": "5a96c01dd6959500047aecc4",
  "author": "Joseph Yoder (computer scientist)",
  "es": "A veces es más fácil tirar un sistema y comenzar de nuevo."
 },
 {
  "id": "5a96c299d6959500047aecc5",
  "author": "Eric S. Raymond",
  "es": "La educación en ciencias de la computación no puede hacer de nadie un programador experto más que estudiar pinceles y pigmentos puede hacer de alguien un pintor experto."
 },
 {
  "id": "5a96c3b6d6959500047aecc7",
  "author": "Randall E. Stross",
  "es": "Los mejores programadores no son marginalmente mejores que los simplemente buenos. Son mejor un orden de magnitud, medido por cualquier estándar: creatividad conceptual, velocidad, ingenio del diseño o capacidad de resolución de problemas."
 },
 {
  "id": "5a96c380d6959500047aecc6",
  "author": "Alan Kay",
  "es": "Inventé el término 'orientado a objetos', y puedo decirte que no tenía C ++ en mente."
 },
 {
  "id": "5a96c44cd6959500047aecc9",
  "author": "Linus Torvalds",
  "es": "La mayoría de los buenos programadores hacen la programación no porque esperen recibir un pago o obtener la adulación por el público, sino porque es divertido programar."
 },
 {
  "id": "5a97def55f624c00046e2103",
  "author": "Alan Perlis",
  "es": "Educadores, generales, dietistas, psicólogos y programa de padres. Los ejércitos, los estudiantes y algunas sociedades están programadas."
 },
 {
  "id": "5a96c431d6959500047aecc8",
  "author": "L. Peter Deutsch",
  "es": "Iterar es humano, para recurrir divino."
 },
 {
  "id": "5a97dee55f624c00046e2102",
  "author": "Alan Perlis",
  "es": "A pesar de toda su potencia, la computadora es un tareas duras. Sus programas deben ser correctos, y lo que deseamos decir debe decirse con precisión en cada detalle."
 },
 {
  "id": "5a97e0755f624c00046e2104",
  "author": "John Locke",
  "es": "Los actos de la mente, en los que ejerce su poder sobre ideas simples, son principalmente estos tres: 1. Combinando varias ideas simples en una compuesta y, por lo tanto, se hacen todas las ideas complejas. 2. El segundo es traer dos ideas, ya sea simple o compleja, juntas, y establecerlas el uno para el otro para tener una visión de ellas a la vez, sin unirlas en una, por la cual obtiene todas sus ideas de relaciones. 3. El tercero es separarlos de todas las demás ideas que las acompañan en su existencia real: esto se llama abstracción y, por lo tanto, todas sus ideas generales se hacen."
 },
 {
  "id": "5a97efdaccdfe50004febf35",
  "author": "Gerald Weinberg",
  "es": "Cuando los desarrolladores del programa no son territoriales sobre su código y alientan a otros a buscar errores y mejoras potenciales, el progreso se acelera dramáticamente."
 },
 {
  "id": "5a97f196ccdfe50004febf37",
  "author": "Anonymous",
  "es": "Lo mejor de un booleano es incluso si estás equivocado, solo estás fuera un poco."
 },
 {
  "id": "5a97f307ccdfe50004febf39",
  "author": "Richard E. Pattis",
  "es": "Al depurar, los principiantes insertan código correctivo; Los expertos eliminan el código defectuoso."
 },
 {
  "id": "5a97f324ccdfe50004febf3a",
  "author": "Douglas Crockford",
  "es": "Resulta que el estilo es importante en la programación por la misma razón que importa en la escritura. Es una mejor lectura."
 },
 {
  "id": "5a97f363ccdfe50004febf3b",
  "author": "Douglas Crockford",
  "es": "Los programas de computadora son las cosas más complejas que hacen los humanos."
 },
 {
  "id": "5a97f4e1ccdfe50004febf3d",
  "author": "Douglas Crockford",
  "es": "La mayoría de los lenguajes de programación contienen piezas buenas y piezas malas. Descubrí que podría ser un mejor programador usando solo las piezas buenas y evitando las partes malas."
 },
 {
  "id": "5a97f510ccdfe50004febf3e",
  "author": "Douglas Crockford",
  "es": "La buena arquitectura es necesaria para dar a los programas una estructura suficiente para poder crecer sin colapsar en un charco de confusión."
 },
 {
  "id": "5a97f539ccdfe50004febf3f",
  "author": "Douglas Crockford",
  "es": "JavaScript es el lenguaje de programación más incomprendido del mundo."
 },
 {
  "id": "5a97f5f2ccdfe50004febf41",
  "author": "Douglas Crockford",
  "es": "En JavaScript, hay un lenguaje hermoso, elegante y altamente expresivo que está enterrado bajo un montón de buenas intenciones y errores."
 },
 {
  "id": "5a97f552ccdfe50004febf40",
  "author": "Douglas Crockford",
  "es": "Por lo general, se espera que el software se modifique en el transcurso de su vida productiva. El proceso de convertir un programa correcto en un programa correcto diferente es extremadamente desafiante."
 },
 {
  "id": "5a97f8c1ccdfe50004febf42",
  "author": "Eric S. Raymond",
  "es": "Cada buen trabajo de software comienza rascando la picazón personal de un desarrollador."
 },
 {
  "id": "5a9801011878b40004879f55",
  "author": "Anonymous",
  "es": "Puede tener el proyecto: hecho a tiempo. Hecho en presupuesto. Hecho correctamente: elija dos."
 },
 {
  "id": "5a9801871878b40004879f56",
  "author": "Andy Hunt (author)",
  "es": "Nadie en la breve historia de la informática ha escrito una pieza de software perfecto. Es poco probable que seas el primero."
 },
 {
  "id": "5a9801f61878b40004879f57",
  "author": "Steve Wozniak",
  "es": "Nunca confíe en una computadora que no pueda tirar una ventana."
 },
 {
  "id": "5a9800cd1878b40004879f54",
  "author": "Alan Kay",
  "es": "La mejor manera de predecir el futuro es inventarlo."
 },
 {
  "id": "5a9802611878b40004879f58",
  "author": "Martin Fowler",
  "es": "Si puede hacer el trabajo de hoy hoy, pero lo hace de tal manera que no pueda hacer el trabajo de mañana mañana, entonces pierde."
 },
 {
  "id": "5a9803171878b40004879f5a",
  "author": "Alan Turing",
  "es": "Los códigos son un rompecabezas. Un juego, como cualquier otro juego."
 },
 {
  "id": "5a9802cb1878b40004879f59",
  "author": "Damian Conway",
  "es": "La documentación es una carta de amor que usted escribe a su futuro yo."
 },
 {
  "id": "5a95d17b7700780004d51dba",
  "author": "Bdale Garbee",
  "es": "La vida es demasiado corta para ejecutar software patentado."
 },
 {
  "id": "5a98075b1878b40004879f5d",
  "author": "Martin Fowler",
  "es": "Ya sea, tengo que pensar para entender qué está haciendo el código, me pregunto si puedo refactorizar el código para que esa comprensión sea más inmediata."
 },
 {
  "id": "5a9803931878b40004879f5b",
  "author": "David Leinweber",
  "es": "Si le das a alguien un programa, los frustrarás por un día; Si les enseña cómo programar, los frustrará durante toda la vida."
 },
 {
  "id": "5a9803be1878b40004879f5c",
  "author": "Mario Fusco",
  "es": "El código que escribe te convierte en programador. El código que elimina te hace bueno. El código que no tiene que escribir lo hace excelente."
 },
 {
  "id": "5a98080e1878b40004879f5f",
  "author": "Addy Osmani",
  "es": "Primero hazlo, luego hazlo bien, luego hazlo mejor."
 },
 {
  "id": "5a9808401878b40004879f60",
  "author": "John Carmack",
  "es": "El costo de agregar una función no es solo el tiempo que lleva codificarla. El costo también incluye la adición de un obstáculo a la expansión futura. El truco es elegir las características que no luchan entre sí."
 },
 {
  "id": "5a9808b71878b40004879f62",
  "author": "George Carrette",
  "es": "Primero aprende informática y toda la teoría. Luego desarrolle un estilo de programación. Entonces olvida todo eso y simplemente hackear."
 },
 {
  "id": "5a98090a1878b40004879f64",
  "author": "Anders Hejlsberg",
  "es": "Solo porque la gente te dice que no se puede hacer, eso no necesariamente significa que no se puede hacer. Simplemente significa que no pueden hacerlo."
 },
 {
  "id": "5a98096c1878b40004879f65",
  "author": "Dennis Ritchie",
  "es": "La única forma de aprender un nuevo lenguaje de programación es escribiendo programas en él."
 },
 {
  "id": "5a980ec71878b40004879f66",
  "author": "Manny Lehman (computer scientist)",
  "es": "Un sistema en evolución aumenta su complejidad a menos que se realice el trabajo para reducirlo."
 },
 {
  "id": "5a985b7ae93441000489b948",
  "author": "Robert C. Martin",
  "es": "No importa cuán lento esté escribiendo código limpio, siempre será más lento si hace un desastre."
 },
 {
  "id": "5a985bc7e93441000489b949",
  "author": "Rob Pike",
  "es": "Los algoritmos elegantes son lentos cuando N es pequeño, y N suele ser pequeño."
 },
 {
  "id": "5a985c91e93441000489b94a",
  "author": "Manuel Blum",
  "es": "La única diferencia entre un FA [Aómates finitos] y una TM [Turing Machine] es que el TM, a diferencia del FA, tiene papel y lápiz. Piénsalo. Te dice algo sobre el poder de la escritura."
 },
 {
  "id": "5a985e7ae93441000489b94c",
  "author": "Alan Perlis",
  "es": "Dentro de una computadora, el lenguaje natural no es natural."
 },
 {
  "id": "5a985db5e93441000489b94b",
  "author": "Brian Cantwell Smith",
  "es": "El hecho de que haya implementado algo no significa que lo comprenda."
 },
 {
  "id": "5a9807b41878b40004879f5e",
  "author": "Douglas Crockford",
  "es": "Eso casi nunca sucede es otra forma de decir 'sucede'."
 },
 {
  "id": "5a9860abe93441000489b94f",
  "author": "Donald Knuth",
  "es": "Tenga cuidado con los errores en el código anterior; Solo lo he demostrado correcto, no lo he probado."
 },
 {
  "id": "5a986366e93441000489b951",
  "author": "Ivan Sutherland",
  "es": "Una pantalla conectada a una computadora digital nos brinda la oportunidad de familiarizarse con conceptos no realizables en el mundo físico. Es un vaso de aspecto en un país de las maravillas matemáticas."
 },
 {
  "id": "5a9911bb8cdbad0004955d02",
  "author": "Ralph Johnson (computer scientist)",
  "es": "Antes de que el software pueda ser reutilizable, primero debe ser utilizable."
 },
 {
  "id": "5a9912938cdbad0004955d04",
  "author": "Gordon Bell",
  "es": "Los componentes más baratos, más rápidos y más confiables son los que no están allí."
 },
 {
  "id": "5a9912248cdbad0004955d03",
  "author": "Anonymous",
  "es": "Para comprender la recursión, primero uno debe comprender la recursión."
 },
 {
  "id": "5a9995789128a800040c7dfa",
  "author": "Don Norman",
  "es": "La parte más difícil del diseño es mantener las características fuera."
 },
 {
  "id": "5a986021e93441000489b94e",
  "author": "Luciano Ramalho",
  "es": "La abstracción prematura es tan mala como la optimización prematura."
 },
 {
  "id": "5a9995d29128a800040c7dfc",
  "author": "Fred Brooks",
  "es": "Gran parte de la esencia de construir un programa es, de hecho, la depuración de la especificación."
 },
 {
  "id": "5a9997389128a800040c7dfd",
  "author": "Elon Musk",
  "es": "Cualquier producto que necesite un manual para trabajar está roto."
 },
 {
  "id": "5a9995b89128a800040c7dfb",
  "author": "Kevlin Henney",
  "es": "El acto de describir un programa con detalle inequívoco y el acto de programación es uno y el mismo."
 },
 {
  "id": "5a9997929128a800040c7dfe",
  "author": "Elon Musk",
  "es": "Creo que siempre debes tener en cuenta que la entropía no está de tu lado."
 },
 {
  "id": "5a9997d79128a800040c7dff",
  "author": "Elon Musk",
  "es": "El camino hacia la oficina del CEO no debe ser a través de la oficina del CFO, y no debe ser a través del departamento de marketing. Debe ser a través de la ingeniería y el diseño."
 },
 {
  "id": "5a9999f39128a800040c7e00",
  "author": "Elon Musk",
  "es": "Las personas se equivocan cuando piensan que la tecnología mejora automáticamente. No mejora automáticamente. Solo mejora si muchas personas trabajan muy duro para mejorarlo, y en realidad, creo, en realidad, en realidad."
 },
 {
  "id": "5a9a9c372bad9600044b6fb4",
  "author": "Elon Musk",
  "es": "Con inteligencia artificial estamos convocando al demonio."
 },
 {
  "id": "5a9a9f7e2bad9600044b6fb6",
  "author": "Elon Musk",
  "es": "La IA es un riesgo fundamental para la existencia de la civilización humana."
 },
 {
  "id": "5a9aa21b2bad9600044b6fba",
  "author": "Terry Winograd",
  "es": "La principal actividad de la programación no es el origen de los nuevos programas independientes, sino en la integración, modificación y explicación de los existentes."
 },
 {
  "id": "5a9aaff32bad9600044b6fbd",
  "author": "Tim Berners-Lee",
  "es": "Los uris geniales no cambian."
 },
 {
  "id": "5a9aaf8e2bad9600044b6fbc",
  "author": "Tim Berners-Lee",
  "es": "No creo en el tipo de idea de momento de Eureka. Creo que es un mito. Sospecho que en realidad Arquímedes había estado pensando en ese problema durante mucho tiempo."
 },
 {
  "id": "5a9ab0372bad9600044b6fbf",
  "author": "Tim Berners-Lee",
  "es": "Cuando inventé la web, no tuve que pedir el permiso de nadie."
 },
 {
  "id": "5a9aa01d2bad9600044b6fb7",
  "author": "Elon Musk",
  "es": "Necesitamos ser muy cuidadosos con la IA. Potencialmente más peligroso que las armas nucleares."
 },
 {
  "id": "5a9ab1802bad9600044b6fc1",
  "author": "Tim Berners-Lee",
  "es": "Inventé la web solo porque la necesitaba, realmente, porque era tan frustrante que no salió."
 },
 {
  "id": "5a9ab1ac2bad9600044b6fc2",
  "author": "Tim Berners-Lee",
  "es": "Ser un hacker, cuando uso el término, es alguien creativo y hace cosas maravillosas."
 },
 {
  "id": "5a9ab1fa2bad9600044b6fc3",
  "author": "Tim Berners-Lee",
  "es": "El servidor de nombres de dominio (DNS) es el talón de Aquiles de la web."
 },
 {
  "id": "5a9ab3f52bad9600044b6fc4",
  "author": "Vannevar Bush",
  "es": "Hace dos siglos, Leibnitz inventó una máquina calculadora que incorporaba la mayoría de las características esenciales de los dispositivos de teclado recientes, pero luego no pudo entrar en uso. La economía de la situación estaba en contra."
 },
 {
  "id": "5a9ab4a82bad9600044b6fc5",
  "author": "Vannevar Bush",
  "es": "Cada vez que se emplean procesos de pensamiento lógicos, hay una oportunidad para la máquina."
 },
 {
  "id": "5a9ab8f42bad9600044b6fc6",
  "author": "Vannevar Bush",
  "es": "Si el razonamiento científico se limitara a los procesos lógicos de la aritmética, no debemos llegar muy lejos en nuestra comprensión del mundo físico. También podría intentar comprender el juego de póker por completo mediante el uso de las matemáticas de la probabilidad."
 },
 {
  "id": "5a9ac42b2bad9600044b6fc7",
  "author": "Ward Cunningham",
  "es": "El envío de código de primera vez es como endeudarse. Un pequeño desarrollo de la deuda, siempre que se devuelva rápidamente con una reescritura. El peligro ocurre cuando la deuda no se reembolsa. Cada minuto gastado en el código de derecha no es-cantado cuenta como interés en esa deuda. Las organizaciones de ingeniería enteras pueden llevarse a un estancamiento bajo la carga de deuda técnica."
 },
 {
  "id": "5a9ac4852bad9600044b6fc8",
  "author": "Martin Fowler",
  "es": "Al igual que una deuda financiera, la deuda técnica incurre en los pagos de intereses, que vienen en forma del esfuerzo adicional que tenemos que hacer en el desarrollo futuro debido a la opción de diseño rápido y sucio."
 },
 {
  "id": "5a9ac5942bad9600044b6fc9",
  "author": "Steve McConnell",
  "es": "Una de las implicaciones importantes de la deuda técnica es que debe ser atendida. Si la deuda crece lo suficientemente grande, eventualmente la compañía gastará más en atender su deuda de lo que invierte en aumentar el valor de sus otros activos."
 },
 {
  "id": "5a9ab0622bad9600044b6fc0",
  "author": "Tim Berners-Lee",
  "es": "Lo que es muy importante desde mi punto de vista es que hay una web. Cualquiera que intente cortarlo en dos encontrará que su pieza se ve muy aburrida."
 },
 {
  "id": "5a9b0b112bad9600044b6fca",
  "author": "René Descartes",
  "es": "Por lo tanto, es observable que los edificios que un solo arquitecto ha planeado y ejecutado sean generalmente más elegantes y cómodos que los que varios han intentado mejorar."
 },
 {
  "id": "5a9b0b752bad9600044b6fcb",
  "author": "Danny Hillis",
  "es": "Las computadoras son los objetos más complejos que los seres humanos han creado jamás, pero en un sentido fundamental son notablemente simples."
 },
 {
  "id": "5a9b0bb22bad9600044b6fcd",
  "author": "Danny Hillis",
  "es": "La magia de una computadora radica en su capacidad para convertirse en casi cualquier cosa que puedas imaginar, siempre que puedas explicar exactamente qué es eso."
 },
 {
  "id": "5a9b0b9a2bad9600044b6fcc",
  "author": "Danny Hillis",
  "es": "La computadora no es solo una calculadora avanzada o cámara o pincel; Más bien, es un dispositivo que acelera y extiende nuestros procesos de pensamiento."
 },
 {
  "id": "5a9b0bce2bad9600044b6fce",
  "author": "Danny Hillis",
  "es": "Con la programación correcta, una computadora puede convertirse en un teatro, un instrumento musical, un libro de referencia, un oponente de ajedrez. Ninguna otra entidad en el mundo, excepto un ser humano, tiene una naturaleza tan adaptable y universal."
 },
 {
  "id": "5a9b0c2f2bad9600044b6fcf",
  "author": "Danny Hillis",
  "es": "Cualquiera que haya escrito un programa sabe que decirle a una computadora lo que desea que haga no es tan fácil como parece. Cada detalle de la operación deseada de la computadora debe describirse con precisión. Por ejemplo, si le dice a un programa de contabilidad que facture a sus clientes por la cantidad que cada uno debe, entonces la computadora enviará una factura semanal por $ 0.00 a los clientes que no deben nada."
 },
 {
  "id": "5a9b0c4b2bad9600044b6fd0",
  "author": "Danny Hillis",
  "es": "Un programador experto es como un poeta que puede expresar las ideas que otros encuentran inexpresables."
 },
 {
  "id": "5a9b0c6b2bad9600044b6fd1",
  "author": "Danny Hillis",
  "es": "Cada lenguaje informático tiene sus Shakespears, y es un placer leer su código. Un programa de computadora bien escrito posee estilo, delicadeza, incluso humor, y una claridad que rivaliza con la mejor prosa."
 },
 {
  "id": "5a9b0c932bad9600044b6fd2",
  "author": "Danny Hillis",
  "es": "Resulta que no hay algoritmo para examinar un programa y determinar si está o no infectado fatalmente con un bucle interminable. Además, no es que nadie haya descubierto tal algoritmo; Más bien, no es posible tal algoritmo."
 },
 {
  "id": "5a9b0cc62bad9600044b6fd3",
  "author": "Danny Hillis",
  "es": "La clase de problemas que son computables por una computadora digital aparentemente incluye cada problema que sea computable por cualquier tipo de dispositivo."
 },
 {
  "id": "5a9b0d662bad9600044b6fd5",
  "author": "Hal Abelson",
  "es": "Los programas que usamos para conjurar procesos son como los hechizos de un hechicero. Están cuidadosamente compuestos a partir de expresiones simbólicas en lenguajes de programación arcanos y esotéricos que prescriben las tareas que queremos que nuestros procesos realicen."
 },
 {
  "id": "5a9b10db2bad9600044b6fd7",
  "author": "Fred Brooks",
  "es": "Los seres humanos no están acostumbrados a ser perfectos, y pocas áreas de actividad humana lo exigen. Ajustarse al requisito de perfección es, creo, la parte más difícil de aprender a programar."
 },
 {
  "id": "5a9b131f2bad9600044b6fd9",
  "author": "Fred Brooks",
  "es": "Debido al optimismo, generalmente esperamos que el número de errores sea más pequeño de lo que resulta. Por lo tanto, las pruebas suelen ser la parte más programada de programación."
 },
 {
  "id": "5a9b0d9c2bad9600044b6fd6",
  "author": "Danny Hillis",
  "es": "Una de las mayores alegrías en la programación de computadoras es descubrir un algoritmo nuevo, más rápido y más eficiente para hacer algo, especialmente si muchas personas respetadas han encontrado peores soluciones."
 },
 {
  "id": "5a9b13442bad9600044b6fda",
  "author": "Fred Brooks",
  "es": "La programación falsa para igualar la fecha deseada del patrón es mucho más común en nuestra disciplina que en otras partes de la ingeniería."
 },
 {
  "id": "5a9b14c12bad9600044b6fdb",
  "author": "Robert L. Glass",
  "es": "Los mejores programadores son hasta 28 veces mejores que los peores programadores, de acuerdo con la investigación de \"diferencias individuales\". Dado que su salario nunca es acorde, son las mayores ofertas en el campo de software."
 },
 {
  "id": "5a9b154e2bad9600044b6fdc",
  "author": "Fred Brooks",
  "es": "Sackman, Erickson y Grant estaban midiendo el rendimiento de un grupo de programadores experimentados. ¡Dentro de este grupo, las proporciones entre el mejor y peor rendimiento promediaron alrededor de 10: 1 en mediciones de productividad y un asombroso 5: 1 en la velocidad del programa y las mediciones de espacio!"
 },
 {
  "id": "5a9b15cb2bad9600044b6fdd",
  "author": "Fred Brooks",
  "es": "La integridad conceptual es la consideración más importante en el diseño del sistema. Es mejor tener un sistema omitir ciertas características y mejoras anómalas, pero reflejar un conjunto de ideas de diseño que tener una que contenga muchas ideas buenas pero independientes y descoordinadas."
 },
 {
  "id": "5a9b15e52bad9600044b6fde",
  "author": "Fred Brooks",
  "es": "La separación del esfuerzo arquitectónico de la implementación es una forma muy poderosa de obtener integridad conceptual en proyectos muy grandes."
 },
 {
  "id": "5a9b16122bad9600044b6fdf",
  "author": "Fred Brooks",
  "es": "La tendencia general es diseñar en exceso el segundo sistema, utilizando todas las ideas y adornos que se desviaron con cautela en el primero."
 },
 {
  "id": "5a9b16922bad9600044b6fe2",
  "author": "Fred Brooks",
  "es": "La pregunta de gestión, por lo tanto, no es si construir un sistema piloto y tirarlo. Harás eso. La única pregunta es si planificar de antemano para construir un desechable o prometer entregar el desechable a los clientes."
 },
 {
  "id": "5a9b17542bad9600044b6fe4",
  "author": "Fred Brooks",
  "es": "El edificio del programa es un proceso de recuperación de entropía, por lo tanto, inherentemente metaestable. El mantenimiento del programa es un proceso de incremento de entropía, e incluso su ejecución más hábil solo retrasa el hundimiento del sistema en obsolescencia no fiable."
 },
 {
  "id": "5a9b16792bad9600044b6fe1",
  "author": "Fred Brooks",
  "es": "Los ingenieros químicos aprendieron hace mucho tiempo que un proceso que funciona en el laboratorio no puede implementarse en una fábrica en un solo paso."
 },
 {
  "id": "5a9b17f92bad9600044b6fe7",
  "author": "Fred Brooks",
  "es": "Primero, debemos observar que la anomalía no es que el progreso del software sea tan lento, pero que el progreso del hardware de la computadora es muy rápido. Ninguna otra tecnología desde que comenzó la civilización ha visto seis órdenes de magnitud de ganancia de precio-rendimiento en 30 años."
 },
 {
  "id": "5a9b17a22bad9600044b6fe6",
  "author": "Fred Brooks",
  "es": "La codificación está \"90 por ciento terminada\" para la mitad del tiempo de codificación total. La depuración es \"99 por ciento completa\" la mayor parte del tiempo."
 },
 {
  "id": "5a9b18102bad9600044b6fe8",
  "author": "Fred Brooks",
  "es": "La complejidad del software es una propiedad esencial, no accidental. Por lo tanto, las descripciones de una entidad de software que abstrae su complejidad a menudo abstrae su esencia."
 },
 {
  "id": "5a9b189c2bad9600044b6fea",
  "author": "Fred Brooks",
  "es": "Estudio tras estudio muestra que los mejores diseñadores producen estructuras que son más rápidas, más pequeñas, más simples, más limpias y producidas con menos esfuerzo. Las diferencias entre el enfoque grande y promedio de un orden de magnitud."
 },
 {
  "id": "5a9b18d52bad9600044b6fec",
  "author": "Fred Brooks",
  "es": "Un producto de sistemas de programación toma aproximadamente nueve veces el esfuerzo que los programas de componentes escritos por separado para uso privado."
 },
 {
  "id": "5a9b190a2bad9600044b6fed",
  "author": "Fred Brooks",
  "es": "Mi regla general es 1\/3 del cronograma de diseño, 1\/6 para codificación, 1\/4 para pruebas de componentes y 1\/4 para pruebas de sistema."
 },
 {
  "id": "5a9b18bf2bad9600044b6feb",
  "author": "Fred Brooks",
  "es": "Primero, mi esposa, mis colegas y mis editores me encuentran que errar con mucha más frecuencia en optimismo que en el pesimismo. Después de todo, soy un programador de fondo, y el optimismo es una enfermedad ocupacional de nuestro oficio."
 },
 {
  "id": "5a9b19232bad9600044b6fee",
  "author": "Fred Brooks",
  "es": "Debido a que no estamos seguros de nuestras estimaciones de programación, a menudo nos falta el coraje de defenderlos obstinadamente contra la gestión y la presión del cliente."
 },
 {
  "id": "5a9b19422bad9600044b6fef",
  "author": "Fred Brooks",
  "es": "Agregar personas a un proyecto de software aumenta el esfuerzo total necesario de tres maneras: el trabajo y la interrupción del reparto en sí, la capacitación de las nuevas personas y la intercomunicación agregada."
 },
 {
  "id": "5a9b195a2bad9600044b6ff0",
  "author": "Fred Brooks",
  "es": "Los muy buenos programadores profesionales son diez veces más productivos que los pobres, en el mismo nivel de capacitación y dos años de experiencia."
 },
 {
  "id": "5a9b198a2bad9600044b6ff2",
  "author": "Fred Brooks",
  "es": "Los aumentos de programación son un poder del tamaño del programa."
 },
 {
  "id": "5a9b1abf2bad9600044b6ff7",
  "author": "Daniel T. Barry",
  "es": "Varios estudios indican que el tamaño óptimo del equipo es entre 2 y 5, siendo 3 el modo. Con más de 5 miembros del equipo, la gerencia del equipo comienza a dominar el trabajo."
 },
 {
  "id": "5a9b1ce02bad9600044b6ff8",
  "author": "Daniel T. Barry",
  "es": "Un error estúpido es un error algorítmicamente evitable. Principalmente, eres estúpido si dejas un error que un programa puede detectar no detectado."
 },
 {
  "id": "5a9b19dd2bad9600044b6ff4",
  "author": "Fred Brooks",
  "es": "Todas las reparaciones tienden a destruir la estructura, a aumentar la entropía y el desorden de un sistema."
 },
 {
  "id": "5a9b1d7d2bad9600044b6ffa",
  "author": "Thomas J. Watson",
  "es": "Creo que hay un mercado mundial para quizás cinco\nordenadores."
 },
 {
  "id": "5a9b1e082bad9600044b6ffb",
  "author": "Ken Olsen",
  "es": "No hay razón para que alguien quiera una computadora en su hogar."
 },
 {
  "id": "5a9b1eb02bad9600044b6ffc",
  "author": "Michael A. Jackson",
  "es": "El comienzo de la sabiduría para un programador es reconocer la diferencia entre hacer que su programa funcione y hacerlo bien."
 },
 {
  "id": "5a9b1ece2bad9600044b6ffd",
  "author": "Michael A. Jackson",
  "es": "Se conocen dos cosas sobre los requisitos:\n1. ¡Cambiarán!\n2. ¡Serán mal entendidos!"
 },
 {
  "id": "5a9b1f362bad9600044b6fff",
  "author": "Daniel T. Barry",
  "es": "Cada vez que mejora el proceso, el trabajo se vuelve más duro."
 },
 {
  "id": "5a9b1f592bad9600044b7000",
  "author": "Daniel T. Barry",
  "es": "Nunca hay suficiente tiempo para hacerlo bien, pero siempre hay suficiente tiempo para arreglarlo o hacerlo."
 },
 {
  "id": "5a8e9be284a8f2000482568c",
  "author": "Rich Skrenta",
  "es": "Cuanto más código tenga, más lugares hay para esconder los errores."
 },
 {
  "id": "5a97f062ccdfe50004febf36",
  "author": "Gerald Weinberg",
  "es": "Si los constructores construyeron casas la forma en que los programadores construyeron programas, el primer pájaro carpintero que viene destruiría la civilización."
 },
 {
  "id": "5a9aa1db2bad9600044b6fb9",
  "author": "Terry Winograd",
  "es": "Las técnicas de inteligencia artificial son para la mente lo que es la burocracia para la interacción social humana."
 },
 {
  "id": "5a9b1f692bad9600044b7001",
  "author": "Daniel T. Barry",
  "es": "El código es costoso de cambiar, pero el diseño es más barato de cambiar, y los requisitos son aún más baratos de cambiar."
 },
 {
  "id": "5a9b1f822bad9600044b7002",
  "author": "Daniel T. Barry",
  "es": "El costo para reparar un error aumenta dramáticamente a medida que el proyecto avanza hacia la finalización y más allá."
 },
 {
  "id": "5a9b1f252bad9600044b6ffe",
  "author": "Daniel T. Barry",
  "es": "Un equipo de programadores altamente competentes que también son políticos altamente territoriales y egoístas fallarán, mientras que un equipo de programadores igualmente competentes, que también son jugadores de equipo egoperatorios, cooperativos, tendrán éxito."
 },
 {
  "id": "5a9b203c2bad9600044b7004",
  "author": "Daniel T. Barry",
  "es": "Para la mayoría del software, la eficiencia simplemente no importa."
 },
 {
  "id": "5a9b214b2bad9600044b7005",
  "author": "Harlan Mills",
  "es": "La mejor manera de saber que ha encontrado el último error es nunca encontrar el primer error."
 },
 {
  "id": "5a9b21cb2bad9600044b7008",
  "author": "Harlan Mills",
  "es": "Un depurador interactivo es un ejemplo sobresaliente de lo que no se necesita: fomenta la piratería de prueba y error en lugar del diseño sistemático, y también esconde las personas marginales apenas calificadas para la programación de precisión."
 },
 {
  "id": "5a9b22a02bad9600044b7009",
  "author": "Daniel T. Barry",
  "es": "Probar a fondo un programa es imposible (requiere un número ilimitado de casos de prueba); Así que intente elegir casos de prueba que expongan todos los errores. Eso es muy difícil, especialmente porque no sabemos cuáles son todos los errores, y si lo hiciéramos, ¡no necesitaríamos los casos de prueba!"
 },
 {
  "id": "5a9b21a12bad9600044b7007",
  "author": "Harlan Mills",
  "es": "La única forma de que ocurran errores en un programa es al presentarlo allí. No se conocen otros mecanismos."
 },
 {
  "id": "5a9b22c72bad9600044b700b",
  "author": "Daniel T. Barry",
  "es": "Los cálculos confiables se pueden obtener de los programas de errores, que después de todo, son el único tipo de programas que hay."
 },
 {
  "id": "5a9b22ed2bad9600044b700c",
  "author": "David Parnas",
  "es": "Puedo construir un sistema confiable con miles de errores, si me deja elegir mis errores cuidadosamente."
 },
 {
  "id": "5a9b231d2bad9600044b700d",
  "author": "Daniel T. Barry",
  "es": "Ed Adams de IBM encontró que el 80% de los problemas de confiabilidad son causados ​​por solo el 2% de los defectos."
 },
 {
  "id": "5a9b23502bad9600044b700e",
  "author": "Jim Horning",
  "es": "El hardware es la parte que puede reemplazar. El software es la parte que debe mantener, porque es muy costoso y ya nadie lo entiende."
 },
 {
  "id": "5a9b23dc2bad9600044b7011",
  "author": "Daniel T. Barry",
  "es": "Cualquier esquema tecnológico o gerencial para forzar la documentación puede subvertirse mediante programadores no dispuestos."
 },
 {
  "id": "5a9b23b02bad9600044b700f",
  "author": "Jim Horning",
  "es": "El buen juicio viene de la experiencia. La experiencia proviene del mal juicio."
 },
 {
  "id": "5a9c649eff6af300049e6b59",
  "author": "John McCarthy (computer scientist)",
  "es": "Se puede decir que las máquinas tan simples como los termostatos tienen creencias."
 },
 {
  "id": "5a9b253f2bad9600044b7016",
  "author": "Tony Parisi (software developer)",
  "es": "Un marco puede proporcionar el 90% de las características que necesitamos rápidamente, dándonos una falsa sensación de confianza al principio del ciclo de desarrollo, y luego ser frustrantemente difícil cuando se trata de implementar los últimos 10%."
 },
 {
  "id": "5a9c6502ff6af300049e6b5a",
  "author": "John McCarthy (computer scientist)",
  "es": "Las cualidades mentales peculiares de las estructuras motivacionales similares a los humanos, como el amor y el odio, no serán necesarias para el comportamiento inteligente, pero probablemente podríamos programar computadoras para exhibirlas si quisiéramos."
 },
 {
  "id": "5a9d2f8c607c5100044dff77",
  "author": "Richard Stallman",
  "es": "He conocido a estudiantes Bright en informática que nunca han visto el código fuente de un gran programa. Pueden ser buenos para escribir programas pequeños, pero no pueden comenzar a aprender las diferentes habilidades de escribir grandes si no pueden ver cómo los otros lo han hecho."
 },
 {
  "id": "5a9c65d6ff6af300049e6b5b",
  "author": "John McCarthy (computer scientist)",
  "es": "Los diseñadores de programas tienden a pensar en los usuarios como idiotas que necesitan ser controlados. Prefieren pensar en su programa como un sirviente, cuyo maestro, el usuario, debería poder controlarlo."
 },
 {
  "id": "5a9d3007607c5100044dff79",
  "author": "Richard Stallman",
  "es": "De hecho, en la década de 1980 a menudo me encontré con especialidades de informática recién graduadas que nunca habían visto un programa real en sus vidas. Solo habían visto ejercicios de juguetes, ejercicios escolares, porque cada programa real era un secreto comercial."
 },
 {
  "id": "5a9d31fa607c5100044dff7c",
  "author": "Richard Stallman",
  "es": "Supongo que, dado que los desarrolladores de software propietarios usan derechos de autor para evitar que compartimos, los cooperadores podemos usar derechos de autor para brindar a otros cooperadores una ventaja propia: pueden usar nuestro código."
 },
 {
  "id": "5a9d2eb2607c5100044dff75",
  "author": "Richard Stallman",
  "es": "Considero que la regla de oro requiere que si me gusta un programa debo compartirlo con otras personas a las que les gusta. Los vendedores de software quieren dividir a los usuarios y conquistarlos, haciendo que cada usuario acepte no compartir con otros. Me niego a romper la solidaridad con otros usuarios de esta manera."
 },
 {
  "id": "5a9d33ae607c5100044dff7d",
  "author": "Richard Stallman",
  "es": "La comunidad de software libre rechaza el \"sacerdocio de la tecnología\", que mantiene al público en general en ignorancia de cómo funciona la tecnología; Alentamos a los estudiantes de cualquier edad y situación a leer el código fuente y aprender todo lo que quieran saber."
 },
 {
  "id": "5a9d3532607c5100044dff7e",
  "author": "Richard Stallman",
  "es": "El lenguaje de programación más potente es LISP. Si no conoce LISP (o su variante, esquema), no sabe lo que significa que un lenguaje de programación sea poderoso y elegante. Una vez que aprenda LISP, comprenderá lo que falta en la mayoría de los otros idiomas."
 },
 {
  "id": "5a9d36a4607c5100044dff7f",
  "author": "Richard Stallman",
  "es": "La programación es programación. Si se vuelve bueno en la programación, no importa en qué lenguaje lo haya aprendido, porque podrá programar en cualquier idioma."
 },
 {
  "id": "5a9dc5de6744730004f6a1e6",
  "author": "Maurice Wilkes",
  "es": "Fue en uno de mis viajes entre la sala de EDSAC y el equipo de puñetazo que la realización se me ocurrió con toda su fuerza que una buena parte del resto de mi vida se gastaría en encontrar errores en mis propios programas."
 },
 {
  "id": "5a9dc65d6744730004f6a1e8",
  "author": "Maurice Wilkes",
  "es": "Desde 1954, la velocidad bruta de las computadoras, medida por el momento en que se necesita para hacer una adición, aumentó en un factor de 10,000. Eso significa que un algoritmo que una vez tardó 10 minutos en funcionar ahora se puede hacer 15 veces por segundo."
 },
 {
  "id": "5a9dc8e76744730004f6a1e9",
  "author": "Richard Hamming",
  "es": "La escritura no es sustituto para pensar."
 },
 {
  "id": "5a9d530a1a29250004e946df",
  "author": "Donald Knuth",
  "es": "Un programador que subconscientemente se ve a sí mismo como un artista disfrutará de lo que hace y lo hará mejor."
 },
 {
  "id": "5a9dc9c26744730004f6a1ea",
  "author": "Richard Hamming",
  "es": "Quizás el problema central que enfrentamos en toda la informática es cómo debemos llegar a la situación en la que construimos sobre el trabajo de los demás en lugar de rehacer tanto de ella de una manera trivialmente diferente."
 },
 {
  "id": "5a9dcace6744730004f6a1eb",
  "author": "Richard Hamming",
  "es": "Cualquier falta de voluntad para aprender matemáticas hoy puede restringir enormemente sus posibilidades mañana."
 },
 {
  "id": "5aa28cf31dcf530004c4bf64",
  "author": "Charles Simonyi",
  "es": "Los programas realmente buenos viven para siempre."
 },
 {
  "id": "5a9dccdd6744730004f6a1ec",
  "author": "Richard Hamming",
  "es": "En ciencias, si sabes lo que estás haciendo, no deberías hacerlo. En ingeniería, si no sabe lo que está haciendo, no debería hacerlo."
 },
 {
  "id": "5aa28d721dcf530004c4bf65",
  "author": "Butler Lampson",
  "es": "Al manejar los recursos, esfuérzate por evitar el desastre en lugar de lograr un óptimo."
 },
 {
  "id": "5aa28ea11dcf530004c4bf67",
  "author": "John Warnock",
  "es": "Como con la mayoría de los proyectos, el último dos por ciento toma el cincuenta por ciento de las veces."
 },
 {
  "id": "5aa299fbe7e86700048f0279",
  "author": "Gary Kildall",
  "es": "Es divertido sentarse en una terminal y dejar que el código fluya. Suena extraño, pero simplemente sale de mi cerebro; Una vez que comencé, no tengo que pensar en ello."
 },
 {
  "id": "5aa29b16e7e86700048f027a",
  "author": "Gary Kildall",
  "es": "Creo que la programación es en gran medida una experiencia religiosa para muchas personas."
 },
 {
  "id": "5aa28c251dcf530004c4bf63",
  "author": "Charles Simonyi",
  "es": "¿Qué es la programación? Algunas personas lo llaman ciencias, algunas personas lo llaman arte, algunas personas lo llaman habilidad. Creo que tiene aspectos de los tres."
 },
 {
  "id": "5aa29bfee7e86700048f027b",
  "author": "Bill Gates",
  "es": "Si alguna vez hablas con un gran programador, encontrarás que conoce sus herramientas como un artista conoce sus pinceles."
 },
 {
  "id": "5aa29c76e7e86700048f027c",
  "author": "Bill Gates",
  "es": "Nuestros objetivos son muy simples. Vamos a crear el software que ponga una computadora en cada escritorio y en cada hogar."
 },
 {
  "id": "5aa2a019e7e86700048f027f",
  "author": "Dan Bricklin",
  "es": "La parte más importante de escribir un programa es diseñar las estructuras de datos."
 },
 {
  "id": "5aa2a0ace7e86700048f0280",
  "author": "Bob Frankston",
  "es": "Las ideas no desaparecen. Cambian de forma, se fusionan con otras ideas."
 },
 {
  "id": "5aa2a355e7e86700048f0284",
  "author": "Peter Roizen",
  "es": "No solo me importa lo que dice el código, sino cómo se ve."
 },
 {
  "id": "5aa2a2f1e7e86700048f0283",
  "author": "Ray Ozzie",
  "es": "La programación es el último campo para alguien a quien le gusta jugar."
 },
 {
  "id": "5aa2a3fde7e86700048f0286",
  "author": "Bob Carr",
  "es": "La programación puede ser adictiva."
 },
 {
  "id": "5aa2a3b3e7e86700048f0285",
  "author": "Bob Carr",
  "es": "Desde un punto de vista artístico, el mejor software proviene del ámbito de la intuición."
 },
 {
  "id": "5aa2a602e7e86700048f0287",
  "author": "Andy Hertzfeld",
  "es": "Entonces Apple se hizo público hacia fines de 1980. De repente, todas estas personas con las que estaba trabajando eran millonarios."
 },
 {
  "id": "5aa2a68ce7e86700048f0288",
  "author": "Toru Iwatani",
  "es": "Estoy interesado en crear imágenes que se comuniquen con las personas."
 },
 {
  "id": "5aa31172bb93c00004d9a6f6",
  "author": "Charles Simonyi",
  "es": "Creo que la mejor manera de supervisar es por ejemplo personal y por revisiones de código frecuentes."
 },
 {
  "id": "5aa3181fbb93c00004d9a6f8",
  "author": "Butler Lampson",
  "es": "Existen algunas técnicas básicas para controlar la complejidad. Fundamentalmente, divido y conquisto, desgloso y trato de escribir descripciones razonablemente precisas de lo que se supone que debe hacer cada pieza."
 },
 {
  "id": "5aa311f9bb93c00004d9a6f7",
  "author": "Charles Simonyi",
  "es": "La eficiencia del código disminuye con un aumento en el número de personas que trabajan en el programa. Los programas más eficientes son escritos por una sola persona."
 },
 {
  "id": "5aa30d4abb93c00004d9a6f5",
  "author": "Charles Simonyi",
  "es": "Te apuesto a que a diez pies de distancia puedo decir si un programa es malo. Es posible que no garantice que sea bueno, pero si se ve mal desde diez pies, puedo garantizarle que no estaba escrito con cuidado."
 },
 {
  "id": "5aa44e197832df00040ac9b7",
  "author": "Butler Lampson",
  "es": "Nadie sabe cómo construir sistemas de hardware realmente complicados, por lo que el diseño de hardware tiende a ser más simple. El software es mucho más complicado."
 },
 {
  "id": "5aa4511b7832df00040ac9b8",
  "author": "Butler Lampson",
  "es": "Un hermoso programa es como un hermoso teorema: hace el trabajo elegantemente."
 },
 {
  "id": "5aa456667832df00040ac9b9",
  "author": "John Warnock",
  "es": "Para tener éxito, desea rodear a personas muy talentosas cuyas habilidades se mezclan muy bien. Ese es el secreto del éxito."
 },
 {
  "id": "5aa459d77832df00040ac9bc",
  "author": "Gary Kildall",
  "es": "Comienzo dibujar las estructuras de datos y paso mucho tiempo pensando en ellas. También pienso en lo que el programa tiene que pasar antes de comenzar a escribir código."
 },
 {
  "id": "5aa456d87832df00040ac9ba",
  "author": "John Warnock",
  "es": "No entres en un desarrollo de dos años sin que salga nada en el medio. Salga algo cada dos meses, para que pueda evaluar, reagruparse y reiniciar."
 },
 {
  "id": "5aa459767832df00040ac9bb",
  "author": "Gary Kildall",
  "es": "Si aprende a resolver problemas, puede pasar por la vida y hacerlo bastante bien."
 },
 {
  "id": "5aa45f317832df00040ac9c0",
  "author": "Bill Gates",
  "es": "Un gran programador piensa en el programa de manera constante, ya sea conduciendo o comiendo. Ese método toma una cantidad increíble de energía mental."
 },
 {
  "id": "5aa4601c7832df00040ac9c1",
  "author": "Bill Gates",
  "es": "Los programas realmente geniales que he escrito han sido todos los que he pensado durante una gran cantidad de tiempo antes de escribirlos."
 },
 {
  "id": "5aa461667832df00040ac9c2",
  "author": "Bill Gates",
  "es": "Hay una increíble comunidad en los tipos de dificultades con las que te encuentras. En reseñas de diseño, realmente disfruto poder proporcionar consejos, basados ​​en programas que he hecho."
 },
 {
  "id": "5a9b16b92bad9600044b6fe3",
  "author": "Fred Brooks",
  "es": "El problema fundamental con el mantenimiento del programa es que la reparación de un defecto tiene una posibilidad sustancial (20-50 por ciento) de introducir otro. Entonces, todo el proceso es dos pasos hacia adelante y un paso atrás."
 },
 {
  "id": "5aa5c874d1481c4acc43aa71",
  "author": "Addy Osmani",
  "es": "Realmente se preocupan por las herramientas que usa porque son lo que te hace lo mejor posible."
 },
 {
  "id": "5aa63f3a42fbc6000481ca0d",
  "author": "Michael Hawley",
  "es": "Lo que me gusta de la programación es que realmente te ayuda a pensar en cómo nos comunicamos, cómo pensamos, cómo funciona la lógica, cómo funcionan las artes creativas."
 },
 {
  "id": "5aa6de2101c2c400048eb9a8",
  "author": "Douglas Crockford",
  "es": "Una de las cosas que he estado presionando es la lectura del código. Creo que eso es lo más útil que una comunidad de programadores puede hacer el uno por el otro: pasar el tiempo de forma regular leer el código del otro."
 },
 {
  "id": "5aa6dd2101c2c400048eb9a7",
  "author": "Douglas Crockford",
  "es": "Creo que la mejor manera de mejorar JavaScript sería\nHazlo más pequeño. Si pudiéramos obtenerlo a lo que hace realmente bien y eliminar las características que agregan poco o ningún valor, en realidad es un lenguaje mejor."
 },
 {
  "id": "5aa6e0d101c2c400048eb9a9",
  "author": "Douglas Crockford",
  "es": "La legibilidad del código es ahora mi primera prioridad. Es más importante que ser rápido, casi tan importante como ser correcto, pero creo que ser legible es en realidad la forma más probable de hacerlo correcto."
 },
 {
  "id": "5aa6e37801c2c400048eb9aa",
  "author": "Douglas Crockford",
  "es": "Parte de lo que dificulta la programación es la mayoría de las veces que estamos haciendo cosas que nunca hemos hecho antes."
 },
 {
  "id": "5aa6e8ac01c2c400048eb9ab",
  "author": "Douglas Crockford",
  "es": "Me considero un escritor. A veces escribo en inglés y a veces escribo en JavaScript."
 },
 {
  "id": "5aa63e0642fbc6000481ca0c",
  "author": "Jaron Lanier",
  "es": "Las personas deberían poder hablar y respirar programas como ahora hablan."
 },
 {
  "id": "5aa9a89904c8cd0004d472c4",
  "author": "Joe Armstrong (programmer)",
  "es": "Si comienza a eliminar las cosas, si llega al punto en el que si eliminara algo más, ya no funcionaría, en este punto es hermoso."
 },
 {
  "id": "5aa8307a94bd610da89b3340",
  "author": "Buckminster Fuller",
  "es": "La humanidad está adquiriendo toda la tecnología correcta por todas las razones equivocadas."
 },
 {
  "id": "5aa9aa9f04c8cd0004d472c5",
  "author": "Simon Peyton Jones",
  "es": "Caracterizo la programación funcional como un ataque radical y elegante en toda la empresa de programas de escritura."
 },
 {
  "id": "5aab9d9617c21b0004913edc",
  "author": "Marijn Haverbeke",
  "es": "El tamaño casi siempre implica complejidad y la complejidad confunde a los programadores. Los programadores confundidos, a su vez, introducen errores (errores) en los programas."
 },
 {
  "id": "5aab9ade17c21b0004913edb",
  "author": "Marijn Haverbeke",
  "es": "Los defectos en los programas de computadora generalmente se llaman errores. Hace que los programadores se sientan bien imaginarlos como pequeñas cosas que simplemente se arrastran en nuestro trabajo. En realidad, por supuesto, los colocamos allí nosotros mismos."
 },
 {
  "id": "5aac2850c2138a00046e9183",
  "author": "L. Peter Deutsch",
  "es": "Cuando estaba en lo que consideraría el pico de mis habilidades, tenía una intuición extremadamente confiable. Haría cosas y simplemente saldrían bien."
 },
 {
  "id": "5aac2af1c2138a00046e9185",
  "author": "L. Peter Deutsch",
  "es": "De vez en cuando siento la tentación de diseñar un lenguaje de programación, pero luego me acuesto hasta que desaparezca."
 },
 {
  "id": "5aac2cf9c2138a00046e9186",
  "author": "L. Peter Deutsch",
  "es": "Los sistemas de idiomas se encuentran en un trípode. Existe el lenguaje, están las bibliotecas y están las herramientas. Y cuán exitoso es un lenguaje depende de una interacción compleja entre esas tres cosas."
 },
 {
  "id": "5aac29e1c2138a00046e9184",
  "author": "L. Peter Deutsch",
  "es": "Haría un argumento fuerte de que los lenguajes de programación no han mejorado cualitativamente en los últimos 40 años. Hoy no hay lenguaje de programación en uso que sea cualitativamente mejor que Simula-67."
 },
 {
  "id": "5aac303cc2138a00046e9188",
  "author": "Gottfried Wilhelm Leibniz",
  "es": "En lugar de la progresión de decenas, durante muchos años he usado la progresión más simple de todas, que procede por dos, después de haber descubierto que es útil para la perfección de la ciencia de los números."
 },
 {
  "id": "5aac2e8fc2138a00046e9187",
  "author": "L. Peter Deutsch",
  "es": "Nunca en mis sueños más salvajes habría predicho la evolución de Internet. Y nunca habría predicho el grado en que la influencia corporativa en Internet ha cambiado su carácter con el tiempo."
 },
 {
  "id": "5aac3a57610d7d0004066303",
  "author": "Ken Thompson",
  "es": "Nunca he sido amante del código existente. El código por sí mismo casi se pudre y debe reescribirse. Incluso cuando nada ha cambiado, por alguna razón se pudre."
 },
 {
  "id": "5aac39b1610d7d0004066302",
  "author": "Ken Thompson",
  "es": "La programación moderna me asusta en muchos aspectos. Me confunde leer un programa que debe leer de arriba hacia abajo. Dice \"Haz algo\". Y vas a buscar \"algo\". Y lo lees y dice: \"Haz algo más\" y vas a buscar algo y dice: \"Haz otra cosa\" y quizás vuelva a la cima. Y no se hace nada. Solo está relegando el problema a un nivel más profundo y profundo."
 },
 {
  "id": "5aa9a7b304c8cd0004d472c3",
  "author": "Richard Hamming",
  "es": "Siempre paso un día a la semana aprendiendo cosas nuevas. Eso significa que gasto un 20% más de mi tiempo que mis colegas aprendiendo cosas nuevas. Ahora, el 20% en interés compuesto significa que después de cuatro años y medio sabré el doble que ellos."
 },
 {
  "id": "5aad68d17632ba0004ec84ae",
  "author": "Donald Knuth",
  "es": "Usaré trucos sucios por dos razones. Una es que si realmente me va a dar una mejora del rendimiento. O a veces solo por puro placer. En cualquier caso, lo documento; No solo lo pongo allí."
 },
 {
  "id": "5aac3aa3610d7d0004066304",
  "author": "Ken Thompson",
  "es": "Tiraré el código tan pronto como quiero agregarle algo y tengo la sensación de que lo que tengo que hacer para agregarlo es demasiado difícil."
 },
 {
  "id": "5aad69767632ba0004ec84af",
  "author": "Donald Knuth",
  "es": "El problema es que la codificación no es divertida si todo lo que puede hacer es llamar a las cosas fuera de una biblioteca, si no puede escribir la biblioteca usted mismo."
 },
 {
  "id": "5aad6d0d7632ba0004ec84b0",
  "author": "Donald Knuth",
  "es": "Cometo errores porque siempre estoy operando en mi límite. Si solo me quedo en un territorio cómodo todo el tiempo, eso no es tan divertido."
 },
 {
  "id": "5aad6dfa7632ba0004ec84b1",
  "author": "Donald Knuth",
  "es": "Tengo esta necesidad de programar. Me despierto por la mañana con las oraciones de un programa alfabetizado. Antes del desayuno, estoy seguro de que los poetas deben sentir esto, tengo que ir a la computadora y escribir este párrafo y luego puedo comer y estoy feliz."
 },
 {
  "id": "5aad71337632ba0004ec84b2",
  "author": "Donald Knuth",
  "es": "Cuantas más variedades de diferentes tipos de anotaciones sigan siendo útiles, no solo lea a las personas que codifican como usted."
 },
 {
  "id": "5ab6e0d632a9950004a2efc2",
  "author": "Ted Nelson",
  "es": "La buena noticia sobre las computadoras es que hacen lo que les dices que hagan. La mala noticia es que hacen lo que les dices que hagan."
 },
 {
  "id": "5aa6e99001c2c400048eb9ac",
  "author": "Douglas Crockford",
  "es": "Las matemáticas son importantes en la programación, pero es solo una de las cosas importantes. Si se enfatiza demasiado las matemáticas, entonces subestiman cosas que podrían ser aún más importantes, como la alfabetización."
 },
 {
  "id": "5aac3b37610d7d0004066305",
  "author": "Ken Thompson",
  "es": "La documentación es muy, muy difícil; Lleva mucho tiempo. Para hacerlo bien, debes hacerlo como programación. Tienes que deconstruirlo, armarlo de manera agradable, reescribirlo cuando esté mal. La gente no hace eso."
 },
 {
  "id": "5ab6e20132a9950004a2efc6",
  "author": "Ted Nelson",
  "es": "Hacer las cosas fáciles es difícil."
 },
 {
  "id": "5ab6e9e132a9950004a2efc7",
  "author": "Richard Moore (engineer)",
  "es": "La diferencia entre la teoría y la práctica es que, en teoría, no hay diferencia entre la teoría y la práctica."
 },
 {
  "id": "5ab6ea2a32a9950004a2efc8",
  "author": "Jim Coplien",
  "es": "Debe nombrar una variable utilizando el mismo cuidado con el que nombra a un niño primogénito."
 },
 {
  "id": "5acca81fe01bb40004668819",
  "author": "Robert C. Martin",
  "es": "La relación del tiempo dedicado a la lectura versus la escritura tiene más de 10 a 1. Estamos leyendo constantemente el código antiguo como parte del esfuerzo por escribir un nuevo código."
 },
 {
  "id": "5b579bb420e9780004ba9ac3",
  "author": "Kyle Simpson",
  "es": "No hay nada más permanente que un truco temporal."
 },
 {
  "id": "5b6d73d6b3f09f0004d9275f",
  "author": "Gottfried Wilhelm Leibniz",
  "es": "Como los números se reducen a los principios más simples, como 0 y 1, un orden maravilloso es evidente en todo momento."
 },
 {
  "id": "5ab6e1ad32a9950004a2efc4",
  "author": "Ted Nelson",
  "es": "En mi segundo año en la escuela de posgrado, tomé un curso de computación y eso fue como un relámpago."
 },
 {
  "id": "5ab6e13932a9950004a2efc3",
  "author": "Ted Nelson",
  "es": "Decían que las computadoras tratan con números. Esto fue absolutamente sin sentido. Las computadoras tratan con información arbitraria de cualquier tipo."
 },
 {
  "id": "5ab6e1dd32a9950004a2efc5",
  "author": "Ted Nelson",
  "es": "En este momento eres un prisionero de cada aplicación que usas. Solo tiene las opciones que le dieron el desarrollador de esa aplicación."
 },
 {
  "id": "5a6ce86f2af929789500e83d",
  "author": "Ray Ozzie",
  "es": "La complejidad mata. Apesta la vida de los desarrolladores, hace que los productos sean difíciles de planificar, construir y probar, introduce desafíos de seguridad y causa la frustración del usuario final y el administrador."
 },
 {
  "id": "5a6ce8702af929789500e882",
  "author": "Niklaus Wirth",
  "es": "El software se vuelve más rápido de lo que el hardware se vuelve más rápido."
 },
 {
  "id": "5a6ce8702af929789500e89e",
  "author": "David Parnas",
  "es": "Una computadora es una máquina estúpida con la capacidad de hacer cosas increíblemente inteligentes, mientras que los programadores de computadoras son personas inteligentes con la capacidad de hacer cosas increíblemente estúpidas. En resumen, son una combinación perfecta."
 },
 {
  "id": "5a6ce8702af929789500e8c4",
  "author": "Anonymous",
  "es": "Unos meses de código de escritura puede ahorrarle unas horas en diseño."
 },
 {
  "id": "5a72f8251ac5f022282e4125",
  "author": "Edsger W. Dijkstra",
  "es": "¿Estás seguro de que todas esas campanas y silbatos, todas esas maravillosas instalaciones de tus llamados lenguajes de programación poderosos, pertenecen al conjunto de soluciones en lugar del conjunto de problemas?"
 },
 {
  "id": "5a91e3a1c4240c0004265956",
  "author": "John von Neumann",
  "es": "Si las personas no creen que las matemáticas son simples, es solo porque no se dan cuenta de lo complicada que es la vida."
 },
 {
  "id": "5a933a408e7b510004cba4bb",
  "author": "Bjarne Stroustrup",
  "es": "C hace que sea fácil dispararse en el pie; C ++ lo hace más difícil, pero cuando lo haces sopla toda tu pierna."
 },
 {
  "id": "5a933a668e7b510004cba4bc",
  "author": "Bjarne Stroustrup",
  "es": "Si crees que es simple, entonces has entendido mal el problema."
 },
 {
  "id": "5a9342458e7b510004cba4c7",
  "author": "Rob Pike",
  "es": "El diseño orientado a objetos son los números romanos de la computación."
 },
 {
  "id": "5a93d61c6a584e0004a4a613",
  "author": "Steve Jobs",
  "es": "Es difícil pensar que una compañía de $ 2 mil millones con más de 4,300 personas no podría competir con seis personas con jeans azules."
 },
 {
  "id": "5a93ffbae49ad10004edb861",
  "author": "Jamie Zawinski",
  "es": "Algunas personas, cuando se enfrentan a un problema, piensan \"Lo sé, usaré expresiones regulares\". Ahora tienen dos problemas."
 },
 {
  "id": "5a943255ee7ed5000496b17c",
  "author": "Bill Gates",
  "es": "A veces nos toman por sorpresa. Por ejemplo, cuando llegó Internet, lo teníamos como una prioridad quinta o sexta."
 },
 {
  "id": "5a9432f0ee7ed5000496b180",
  "author": "Ward Cunningham",
  "es": "Fue un punto de inflexión en mi carrera de programación cuando me di cuenta de que no tenía que ganar cada argumento."
 },
 {
  "id": "5a9435b6ee7ed5000496b18f",
  "author": "Vint Cerf",
  "es": "Y la programación de computadoras fue muy fascinante. Creas tu propio pequeño universo, y luego hace lo que le dices que haga."
 },
 {
  "id": "5a943552ee7ed5000496b18d",
  "author": "Joshua Bloch",
  "es": "Cuanto más limpio y mejor sea el programa, más rápido se ejecutará. Y si no es así, será fácil hacerlo rápido."
 },
 {
  "id": "5a9436dcee7ed5000496b194",
  "author": "Philip Greenspun",
  "es": "SQL, Lisp y Haskell son los únicos lenguajes de programación que he visto donde uno pasa más tiempo pensando que escribir."
 },
 {
  "id": "5a95a610cb1a4d0004b2987e",
  "author": "Alan Perlis",
  "es": "Es mejor que 100 funciones funcionen en una estructura de datos que que las 10 funciones funcionen en 10 estructuras de datos."
 },
 {
  "id": "5a95d1077700780004d51db9",
  "author": "Brian Kernighan",
  "es": "La herramienta de depuración más efectiva todavía es un pensamiento cuidadoso, junto con declaraciones de impresión juiciosamente colocadas."
 },
 {
  "id": "5a95d7637700780004d51dc5",
  "author": "Marvin Minsky",
  "es": "Los lenguajes informáticos del futuro se preocuparán más por los objetivos y menos por los procedimientos especificados por el programador."
 },
 {
  "id": "5a95fe167700780004d51dcd",
  "author": "Alan Turing",
  "es": "Una computadora merecería ser llamada inteligente si pudiera engañar a un humano para que crea que era humano."
 },
 {
  "id": "5a96be3ed6959500047aecbd",
  "author": "Joseph Yoder (computer scientist)",
  "es": "La forma de detener la entropía en el software es refactorizarla."
 },
 {
  "id": "5a96bf21d6959500047aecc0",
  "author": "Joseph Yoder (computer scientist)",
  "es": "Las revisiones y la programación de pares proporcionan a los programadores algo que su trabajo no tendría de otra manera: una audiencia. La luz del sol, se dice que es un poderoso desinfectante. Una audiencia inmediata de los compañeros proporciona incentivos inmediatos a los programadores para mantener su código claro y comprensible, así como funcional."
 },
 {
  "id": "5a97f2c0ccdfe50004febf38",
  "author": "John Romero",
  "es": "Es posible que no piense que los programadores sean artistas, pero la programación es una profesión extremadamente creativa. Es la creatividad basada en la lógica."
 },
 {
  "id": "5a97f4c5ccdfe50004febf3c",
  "author": "Douglas Crockford",
  "es": "JavaScript es el único idioma que conozco que las personas sienten que no necesitan aprender antes de comenzar a usarlo."
 },
 {
  "id": "5a9808951878b40004879f61",
  "author": "Addy Osmani",
  "es": "Sea humilde, comuníquese claramente y respeta a los demás. No cuesta nada amable, pero el impacto no tiene precio."
 },
 {
  "id": "5a9808dc1878b40004879f63",
  "author": "Pete Cordell",
  "es": "Decirle a un programador que ya hay una biblioteca que hacer X es como decirle a un compositor de que ya hay una canción sobre el amor."
 },
 {
  "id": "5a980f551878b40004879f68",
  "author": "Stan Kelly-Bootle",
  "es": "¿Deberían los índices de matriz comenzar a 0 o 1? Mi compromiso de 0.5 fue rechazado sin, pensé, una consideración adecuada."
 },
 {
  "id": "5a985fd2e93441000489b94d",
  "author": "Edsger W. Dijkstra",
  "es": "El propósito de la abstracción no es ser vago, sino crear un nuevo nivel semántico en el que uno puede ser absolutamente preciso."
 },
 {
  "id": "5a9a9e792bad9600044b6fb5",
  "author": "Elon Musk",
  "es": "Ciertamente habrá interrupción laboral. Porque lo que va a suceder es que los robots podrán hacer todo mejor que nosotros."
 },
 {
  "id": "5a9860dbe93441000489b950",
  "author": "John Carmack",
  "es": "A veces, la implementación elegante es una función. No es un método. No es una clase. No es un marco. Solo una función."
 },
 {
  "id": "5a9aa0f72bad9600044b6fb8",
  "author": "Marvin Minsky",
  "es": "La inteligencia artificial es la ciencia de hacer que las máquinas hacen cosas que requerirían inteligencia si los hombres lo hacen."
 },
 {
  "id": "5a9aaf682bad9600044b6fbb",
  "author": "Tim Berners-Lee",
  "es": "Solo tenía que tomar la idea de hipertexto y conectarla a las ideas TCP y DNS y, Ta-Da!-La World Wide Web."
 },
 {
  "id": "5a9b0d552bad9600044b6fd4",
  "author": "Hal Abelson",
  "es": "Un proceso computacional se parece mucho a la idea de un hechicero de un espíritu. No se puede ver ni tocar. No está compuesto de materia en absoluto. Sin embargo, es muy real. Puede realizar un trabajo intelectual. Puede responder preguntas. Puede afectar el mundo desembolsando dinero en un banco o controlando un brazo de robot en una fábrica."
 },
 {
  "id": "5a9b17792bad9600044b6fe5",
  "author": "Fred Brooks",
  "es": "Uno debe asumir que habrá muchos errores y planificará un procedimiento ordenado para serpalearlos."
 },
 {
  "id": "5a9b19662bad9600044b6ff1",
  "author": "Fred Brooks",
  "es": "Para lograr la integridad conceptual, un diseño debe proceder de una mente o un pequeño grupo de mentes de acuerdo."
 },
 {
  "id": "5a9b1d152bad9600044b6ff9",
  "author": "Tom DeMarco",
  "es": "La mejor tecnología nunca tiene tanto impacto como los problemas de novia o novio."
 },
 {
  "id": "5a9b19952bad9600044b6ff3",
  "author": "Fred Brooks",
  "es": "El costo de mantenimiento se ve fuertemente afectado por la cantidad de usuarios. Más usuarios encuentran más errores."
 },
 {
  "id": "5a9b1f8c2bad9600044b7003",
  "author": "Daniel T. Barry",
  "es": "¡La mayoría de los errores se introducen durante la especificación de requisitos!"
 },
 {
  "id": "5a9b21892bad9600044b7006",
  "author": "Harlan Mills",
  "es": "La programación es similar a un juego de golf. El punto no es meter la pelota en el agujero, sino cuántos golpes se necesitan."
 },
 {
  "id": "5a9b22b42bad9600044b700a",
  "author": "Daniel T. Barry",
  "es": "Varios estudios han demostrado que las pruebas no son muy efectivas para encontrar errores."
 },
 {
  "id": "5a9b23cd2bad9600044b7010",
  "author": "Daniel T. Barry",
  "es": "La clave para mantener bajos los costos del software es escribir un código que se modifique fácilmente."
 },
 {
  "id": "5a9b24492bad9600044b7014",
  "author": "Daniel T. Barry",
  "es": "Las nociones de corrección en matemáticas y programas son diferentes. Un modelo matemático debe ser consistente; No es necesario que coincida con la realidad (sea correcto), y no necesita ser completo (en el sentido formal). Un modelo de programa debe ser consistente; Debe coincidir con la realidad; y debe estar completo (en el sentido de que reacciona con gracia a todas las entradas)."
 },
 {
  "id": "5a9b23ed2bad9600044b7012",
  "author": "Daniel T. Barry",
  "es": "La programación es al menos tan difícil como desarrollar una teoría matemática."
 },
 {
  "id": "5a9d2fc8607c5100044dff78",
  "author": "Richard Stallman",
  "es": "En 1971, cuando me uní al personal del Laboratorio de Inteligencia Artificial del MIT, todos los que ayudamos a desarrollar el software del sistema operativo, nos llamamos hackers. No estábamos violando ninguna ley, al menos no en el pirateo que nos pagaron. Estábamos desarrollando software y nos estábamos divirtiendo. La piratería se refiere al espíritu de diversión en el que estábamos desarrollando software."
 },
 {
  "id": "5a9dc6316744730004f6a1e7",
  "author": "Maurice Wilkes",
  "es": "Para junio de 1949, las personas habían comenzado a darse cuenta de que no era tan fácil obtener programas correctamente como apareció en un momento."
 },
 {
  "id": "5aa28dd71dcf530004c4bf66",
  "author": "Butler Lampson",
  "es": "Todo debe hacerse lo más simple posible. Pero para hacer eso tienes que dominar la complejidad."
 },
 {
  "id": "5aa29df5e7e86700048f027d",
  "author": "Wayne Ratliff",
  "es": "Si hubiera seguido mi corazón en lugar de consejos, DBase estaría mucho más cerca de la perfección hoy."
 },
 {
  "id": "5aa29e43e7e86700048f027e",
  "author": "Wayne Ratliff",
  "es": "La programación es un poco como el ejército. Ahora que estoy fuera, es bueno haber tenido la experiencia."
 },
 {
  "id": "5aa2a20ce7e86700048f0282",
  "author": "Jonathan Sachs",
  "es": "No me gusta usar herramientas o programas en los que no escribo ni que no tenga algo de control."
 },
 {
  "id": "5aa2a15fe7e86700048f0281",
  "author": "Bob Frankston",
  "es": "Si no puede explicarle un programa, la posibilidad de la\nLa computadora que lo hace bien es bastante pequeña."
 },
 {
  "id": "5aa45ab57832df00040ac9bd",
  "author": "Gary Kildall",
  "es": "No comento el código en sí porque creo que el código correctamente escrito es muy autodocumentado."
 },
 {
  "id": "5aa45bcf7832df00040ac9be",
  "author": "Gary Kildall",
  "es": "Cuando un programa está limpio y ordenado, bien estructurado y consistente, puede ser hermoso."
 },
 {
  "id": "5aa6db5d01c2c400048eb9a6",
  "author": "Douglas Crockford",
  "es": "JavaScript, puramente por accidente, se ha convertido en el lenguaje de programación más popular del mundo."
 },
 {
  "id": "5aac2669c2138a00046e9182",
  "author": "L. Peter Deutsch",
  "es": "El software es una disciplina de detalle, y ese es un problema fundamental profundo y horrible con el software."
 },
 {
  "id": "5aac309cc2138a00046e9189",
  "author": "Gottfried Wilhelm Leibniz",
  "es": "Incluso en los juegos de los niños hay cosas para interesar al mejor matemático."
 }
]